{"version":3,"sources":["services/api.js","helpers/apiCalls.js","hooks/globalState.js","helpers/languagesConfig.js","components/AccountSelectionModal/index.js","components/HelpModal/index.js","components/CognosHelpModal/index.js","components/HomeHelp/index.js","components/SideNav/index.js","components/WarningModal/index.js","components/StandardDashboardModal/index.js","components/SuccessModal/index.js","components/IntentHelperModal/images/Step1.png","components/IntentHelperModal/images/Step2.png","components/IntentHelperModal/images/Step3.png","components/IntentHelperModal/images/Step4.png","components/IntentHelperModal/images/Step5.png","components/IntentHelperModal/images/Step6.png","components/IntentHelperModal/index.js","components/Header/index.js","components/Rating/index.js","helpers/helpers.js","components/ConfigModal/index.js","images/capa.png","components/HomeImage/index.js","components/HomeCards/index.js","pages/Home/index.js","components/InfoTable/index.js","components/Tabs/index.js","components/PaginationComponent/index.js","components/DateChooser/index.js","pages/Dashboard/index.js","pages/Search/index.js","helpers/cognos.js","components/TextInput/index.js","components/Select/index.js","components/CognosConfigModal/index.js","components/SaveModal/index.js","components/LoadModal/index.js","pages/Cognos/index.js","pages/Train/index.js","pages/Login/index.js","routes.js","index.js"],"names":["api","axios","create","baseURL","window","location","protocol","host","getAccounts","Promise","resolve","reject","get","then","res","data","catch","err","switchAccount","accountId","getResources","getResourceKeys","resourceId","GlobalStateContext","createContext","GlobalStateProvider","children","history","useHistory","useState","language","setLanguage","resources","accounts","setAccounts","entity","name","account","setAccount","cognos","body","guid","cloudant","db2","setResources","loading","setLoading","helpOpen","setHelpOpen","cognosHelpOpen","setCognosHelpOpen","homeHelp","setHomeHelpOpen","intentHelpOpen","setIntentHelpOpen","configOpen","setConfigOpen","cognosConfigOpen","setCognosConfigOpen","accountModalOpen","setAccountModalOpen","accountLoading","setAccountLoading","accountSelected","setAccountSelected","saveModalOpen","setSaveModalOpen","loadModalOpen","setLoadModalOpen","warningOpen","setWarningOpen","standardDashboardModal","setStandardDashboardModal","successOpen","setSuccessOpen","unsavedChanges","setUnsavedChanges","rowData","setRowData","conversations","setConversations","conversationsByDay","setConversationsByDay","intentsByDay","setIntentsByDay","dateFilter","setDateFilter","cognosSession","setCognosSession","cognosDashboard","setCognosDashboard","JSON","parse","localStorage","getItem","credentialsAndDefaults","setCredentialsAndDefaults","itensPerPage","setItensPerPage","currentPage","setCurrentPage","startIndex","endIndex","useEffect","response","status","push","setItem","stringify","Provider","value","useGlobalState","context","useContext","Error","pt","headerSwitcher","save","upToDate","load","infoTable","sendButton","group","accountSelectionModal","heading","label","primaryText","secondaryText","inputLabel1","modal","selectAnOption","alert","inputLabel2","cognosModal","tab1","tab2","tab3","tab4","inputLabel3","inputLabel4","inputLabel5","inputLabel6","inputLabel7","inputLabel8","inputLabel9","inputLabel10","inputLabel11","inputLabel12","inputLabel13","inputLabel14","inputLabel15","inputLabel16","inputLabel17","saveModal","loadModal","modalHelp","text","cognosModalHelp","modalWarning","caption","modalSuccess","tabs","home","welcome","cardHeader1","cardHeader2","cardHeader3","cardContent1","cardContent2","cardContent3","intentModal","description","step1","step2","step3","step4","step5","step6","step7","content1","content2","content3","content4","content5","content6","content7","es","en","AccountSelectionModal","Modal","open","modalHeading","textLanguage","modalLabel","primaryButtonText","secondaryButtonText","onRequestClose","onRequestSubmit","preventCloseOnClickOutside","Select","id","invalidText","labelText","onChange","e","target","metadata","map","resource","SelectItem","HelpModal","passiveModal","CognosHelpModal","HomeHelp","SideMenu","SideNav","expanded","isRail","SideNavItems","SideNavLink","renderIcon","Analytics32","onClick","FaceAdd32","WatsonHealthMagnify32","ChartMultitype32","WarningModal","handleClose","kind","title","subtitle","iconDescription","statusIconDescription","onClose","onCloseButtonClick","timeout","style","marginBottom","StandardDashboardModal","SuccessModal","images","Step1","Step2","Step3","Step4","Step5","Step6","IntentHelpModal","steps","content","React","activeStep","setActiveStep","Set","skipped","setSkipped","isStepSkipped","step","has","Button","hasIconOnly","Help24","ComposedModal","shouldSubmitOnEnter","size","Box","sx","width","Stepper","alternativeLabel","index","stepProps","labelProps","completed","Step","StepLabel","length","Typography","mt","mb","display","flexDirection","flex","src","prevActiveStep","disabled","newSkipped","values","delete","HeaderIcc","modalOpen","renderButton","languageIcons","openSidePanel","setOpenSidePanel","openSaveMenu","setOpenSaveMenu","pathname","includes","className","prefix","fill","menuLinkName","acc","Object","entries","key","toUpperCase","height","maxWidth","customIcons","icon","IconContainer","props","other","BasicRating","conversationID","logID","defaultValue","Rating","IconContainerComponent","highlightSelectedOnly","color","newValue","log","LOGID","SCORE","createRows","updateScore","rowsAux","rowAux","CONVERSATIONID","CLIENTMESSAGE","ASSISTANTMESSAGE","FIRSTINTENT","CLIENTTIMESTAMP","getLogs","connectionString","tableName","callback","param","post","connStr","table","keys","conversation","updateRender","filter","obj","fromEntries","getCognosSession","username","password","sendToCloudant","cloudantApi","cloudantUrl","cloudantDbName","dashboardName","apikey","url","dbName","docId","document","getFromCloudant","ID","initializeSources","xsd","jdbcUrl","driverClassName","schema","user","logsTable","conversationTable","callsTable","contextTable","conversationPathTable","overviewTable","classDistributionTable","precisionAtKTable","classAccuracyTable","pairWiseClassErrorsTable","accuracyVsCoverageTable","_id","_rev","initializeExperiments","generateConnectionString","credential","credentials","connection","database","hosts","hostname","port","authentication","registerLogin","console","defaultValues","db2Username","db2Password","cognosUsername","cognosPassword","defaults","defaultDashboardName","ConfigModal","selectedInstance","setSelectedInstance","selectedCredential","setSelectedCredential","temp","noConnection","resourceKeys","Loading","TextInput","placeholder","HomeImage","Image","HomeCards","ArrowRight32","Home","storedLanguage","InfoTable","day","filtered","DataTable","rows","headers","header","useZebraStyles","stickyHeader","getHeaderProps","getTableProps","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","sendScore","Table","TableHead","TableRow","TableHeader","TableBody","row","cells","cell","TableCell","BasicTabs","Tabs","type","slice","foundConversation","split","createLabel","indexOf","Tab","PaginationComponent","Pagination","itemsPerPageText","Languages","page","pageNumberText","pageSize","pageSizes","totalItems","firstTab","getElementById","click","selectFirstTab","dateToShow","setDateToShow","reverse","join","PageFirst32","PageLast32","Dashboard","DataTableSkeleton","SearchPage","searchValue","setSearchValue","Search","light","Accordion","intent","toLowerCase","replace","AccordionItem","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","i","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","CognosApi","options","instance","TypeError","_classCallCheck","this","node","_node","_cognosURL","cognosRootURL","_testURL","testURL","_sessionCode","sessionCode","_initTimeout","initTimeout","_apiKey","_createUID","_pendingRequests","_eventCallbacks","_eventReverseLookup","SUPPORTED_LANGUAGES","_language","_message_regex","RegExp","updateModuleDefinitions","_updateModuleDefinitions","bind","_this","_readyPromise","_initializeContainer","_initializeService","_sendMessage","apiId","actionId","APISERVICE_INIT","eventName","cb","APISERVICE_ON","parameters","Array","call","arguments","APISERVICE_OFF","container","createElement","_buildSourceUrl","setAttribute","APISERVICE_CLASS","innerHTML","appendChild","_target","contentWindow","_targetOrigin","exec","origin","_this2","_destroyService","_cleanupApiService","_cleanupContainer","root","params","perspective","apiKey","parentOrigin","contentLanguage","k","encodeURIComponent","_this3","_messageHandler","removeEventListener","forEach","memberName","iframes","getElementsByClassName","removeChild","_this4","_receiveMessage","addEventListener","_registerResponseCallbacks","_this5","APISERVICE_DESTROY","success","fail","_registerEventCallbacks","_unregisterEventCallbacks","postMessage","_createMessage","event","_parseMessage","_rejectResponseCallbacks","payload","_resolveResponseCallbacks","resolvedAPI","_injectAPI","_handleEventCallbacks","APIHEADER","APIHEADER_DELIMITER","result","lastIndex","apiSpec","_this6","_getAPIMethod","methodName","_this7","_len","args","_key","_len2","_key2","_len3","_key3","dashboardSpec","dataSources","sources","moduleClientIds","source","clientId","newModules","_doModuleUpdate","cloneDashboardSpec","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newModule","module","newId","return","prepend","uid","Date","now","valueOf","__uid","toString","EVENTS","REQUEST_ERROR","APIHEADER_MARKER","APIHEADER_VERSION","freeze","cs","da","de","fi","fr","hr","hu","it","ja","kk","ko","nb","nl","no","pl","ro","ru","sl","sv","th","tr","zh","Input","field","upperCase","CustomSelect","setSelection","CognosConfigModal","cognosInstance","setCognosInstance","cloudantInstance","setCloudantInstance","db2Instance","setDb2Instance","client_id","client_secret","jdbc_url","handleCognosCredentials","handleCloudantCredentials","handleDb2Credentials","hasForm","SaveModal","LoadModal","cognosClient","loadDashboard","cognosApi","dashboard","initialize","openDashboard","dashboardAPI","setMode","MODES","EDIT","getSpec","on","DIRTY","dashSpec","CognosPage","renderSave","setRenderSave","initializeDashboard","session","storagedDashboard","VIEW","Login","token","setToken","invalid","setInvalid","passcode","some","removeItem","primary_owner","ibmid","toLocaleDateString","timeZone","hour","minute","second","required","href","Routes","exact","path","to","component","TrainPage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87766bbe.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL:\n    process.env.NODE_ENV === \"production\"\n      ? `${window.location.protocol}//${window.location.host}`\n      : \"http://localhost:5000\",\n});\n\nexport default api;\n","import api from \"../services/api\";\n\nexport async function getAccounts() {\n  return new Promise((resolve, reject) => {\n    api\n      .get(\"/ibmid/accounts\")\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function switchAccount(accountId) {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/ibmid/accounts/switch?account_id=${accountId}`)\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function getResources() {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/resources`)\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function getResourceKeys(resourceId) {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/ibmid/resources/${resourceId}/resource_keys`)\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n}\n","import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getAccounts, getResources } from \"../helpers/apiCalls\";\n\nconst GlobalStateContext = createContext({});\n\nexport default function GlobalStateProvider({ children }) {\n  const history = useHistory();\n\n  const [language, setLanguage] = useState(\"en\");\n\n  const [accounts, setAccounts] = useState({ resources: [] });\n  const [account, setAccount] = useState({\n    entity: {\n      name: \"\",\n    },\n  });\n  const [resources, setResources] = useState({\n    cognos: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n    cloudant: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n    db2: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const [cognosHelpOpen, setCognosHelpOpen] = useState(false);\n  const [homeHelp, setHomeHelpOpen] = useState(false);\n  const [intentHelpOpen, setIntentHelpOpen] = useState(false);\n\n  const [configOpen, setConfigOpen] = useState(false);\n  const [cognosConfigOpen, setCognosConfigOpen] = useState(false);\n  const [accountModalOpen, setAccountModalOpen] = useState(false);\n  const [accountLoading, setAccountLoading] = useState(false);\n\n  const [accountSelected, setAccountSelected] = useState(false);\n\n  const [saveModalOpen, setSaveModalOpen] = useState(false);\n  const [loadModalOpen, setLoadModalOpen] = useState(false);\n\n  const [warningOpen, setWarningOpen] = useState(false);\n  const [standardDashboardModal, setStandardDashboardModal] = useState(false);\n  const [successOpen, setSuccessOpen] = useState(false);\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n\n  const [rowData, setRowData] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [conversationsByDay, setConversationsByDay] = useState({});\n  const [intentsByDay, setIntentsByDay] = useState({});\n  const [dateFilter, setDateFilter] = useState(\"\");\n\n  const [cognosSession, setCognosSession] = useState(null);\n  const [cognosDashboard, setCognosDashboard] = useState(null);\n\n  const [credentialsAndDefaults, setCredentialsAndDefaults] = useState(\n    JSON.parse(\n      localStorage.getItem(\"@assistant-curator/credentialsAndDefaults\")\n    )\n  );\n\n  // pagination\n  const [itensPerPage, setItensPerPage] = useState(9);\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * itensPerPage;\n  const endIndex = startIndex + itensPerPage;\n\n  useEffect(async () => {\n    if (account.entity.name !== \"\") {\n      await getAccounts()\n        .then((res) => setAccounts(res))\n        .catch((err) => {\n          if (err.response.status === 401) history.push(\"/login\");\n        });\n      await getResources()\n        .then((res) => {\n          setResources(res);\n          setAccountLoading(false);\n        })\n        .catch((err) => {\n          if (err.response.status === 401) history.push(\"/login\");\n        });\n    }\n  }, [account]);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"@assistant-curator/credentialsAndDefaults\",\n      JSON.stringify(credentialsAndDefaults)\n    );\n  }, [credentialsAndDefaults]);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        language,\n        setLanguage,\n        loading,\n        setLoading,\n        helpOpen,\n        setHelpOpen,\n        homeHelp,\n        setHomeHelpOpen,\n        intentHelpOpen,\n        setIntentHelpOpen,\n        cognosHelpOpen,\n        setCognosHelpOpen,\n        saveModalOpen,\n        setSaveModalOpen,\n        loadModalOpen,\n        setLoadModalOpen,\n        warningOpen,\n        setWarningOpen,\n        standardDashboardModal,\n        setStandardDashboardModal,\n        successOpen,\n        setSuccessOpen,\n        unsavedChanges,\n        setUnsavedChanges,\n        configOpen,\n        setConfigOpen,\n        cognosConfigOpen,\n        setCognosConfigOpen,\n        accountModalOpen,\n        setAccountModalOpen,\n        accountSelected,\n        setAccountSelected,\n        accountLoading,\n        setAccountLoading,\n        rowData,\n        setRowData,\n        conversations,\n        setConversations,\n        conversationsByDay,\n        setConversationsByDay,\n        intentsByDay,\n        setIntentsByDay,\n        dateFilter,\n        setDateFilter,\n        cognosSession,\n        setCognosSession,\n        cognosDashboard,\n        setCognosDashboard,\n        credentialsAndDefaults,\n        setCredentialsAndDefaults,\n        history,\n        accounts,\n        setAccounts,\n        account,\n        setAccount,\n        resources,\n        setResources,\n        itensPerPage,\n        setItensPerPage,\n        currentPage,\n        setCurrentPage,\n        startIndex,\n        endIndex,\n      }}\n    >\n      {children}\n    </GlobalStateContext.Provider>\n  );\n}\n\nexport function useGlobalState() {\n  const context = useContext(GlobalStateContext);\n\n  if (!context) {\n    throw new Error(\"useGlobalState must be used within a GlobalStateProvider\");\n  }\n\n  return context;\n}\n","export default {\n  pt: {\n    headerSwitcher: {\n      save: \"Salvar\",\n      upToDate: \"Já atualizado\",\n      load: \"Load\",\n    },\n    infoTable: {\n      sendButton: \"Salvar Notas\",\n      group: \"Grupo\",\n    },\n    accountSelectionModal: {\n      heading: \"Selecione a conta desejada\",\n      label: \"Contas disponíveis\",\n      primaryText: \"Selecionar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Contas\",\n    },\n    modal: {\n      heading: \"Informações de conexão com Db2\",\n      label: \"Instância e Tabela consultadas\",\n      primaryText: \"Recarregar\",\n      secondaryText: \"Salvar\",\n      selectAnOption: \"Selecione uma opção\",\n      alert: \"Por favor, selecione uma das instâncias listadas\",\n      inputLabel1: \"Selecione a instância do Db2 desejada\",\n      inputLabel2: \"Insira o título da tabela a ser consultada\",\n    },\n    cognosModal: {\n      heading: \"Credenciais de uso do Cognos\",\n      label: \"Instâncias consultadas\",\n      primaryText: \"Recarregar\",\n      secondaryText: \"Salvar\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tabelas\",\n      selectAnOption: \"Selecione uma opção\",\n      alert: \"Por favor, selecione uma das instâncias listadas\",\n      inputLabel1: \"Selecione a instância do Cognos desejada\",\n      inputLabel2: \"Selecione a instância do Cloudant desejada\",\n      inputLabel3: \"Insira a database do Cloudant desejada\",\n      inputLabel4: \"Selecione a instância do Db2 desejada\",\n      inputLabel5: \"Insira o link do módulo xsd\",\n      inputLabel6: \"Insira o driver Jdbc\",\n      inputLabel7: \"Tabela de logs\",\n      inputLabel8: \"Tabela de conversas\",\n      inputLabel9: \"Tabela de telefonemas\",\n      inputLabel10: \"Tabela de variáveis de contexto\",\n      inputLabel11: \"Tabela de caminhos de conversa\",\n      inputLabel12: \"Tabela de visão geral\",\n      inputLabel13: \"Tabela de distribuição de classes\",\n      inputLabel14: \"Tabela de precisão @k\",\n      inputLabel15: \"Tabela de acurácia de classes\",\n      inputLabel16: \"Tabela de intenções confundidas\",\n      inputLabel17: \"Tabela de acurácia vs cobertura\",\n    },\n    saveModal: {\n      heading:\n        \"Insira o nome que deseja dar ao dashboard. Este será automaticamente configurado como Dashboard default\",\n      label: \"Salvar Dashboard no Cloudant\",\n      primaryText: \"Salvar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nome (ID) do Dashboard\",\n    },\n    loadModal: {\n      heading:\n        \"Insira o nome do dashboard que deseja buscar. Este será automaticamente configurado como Dashboard default\",\n      label: \"Buscar Dashboard no Cloudant\",\n      primaryText: \"Buscar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nome (ID) do Dashboard\",\n    },\n    modalHelp: {\n      heading: \"Ajuda\",\n      text: \"Esta tabela exibe a troca de mensagens entre cliente e Assistente, destacando qual foi a intent compreendida pelo assistente na mensagem recebida. Com estas informações, o curador pode avaliar o desempenho do assistente no nível de mensagem.\",\n    },\n    cognosModalHelp: {\n      heading: \"Ajuda\",\n      text: \"Esta página exibe um dashboard interativo que apresenta métricas para auxiliar o processo de curadoria do assitente.\",\n    },\n    homeHelp: {\n      heading: \"Ajuda\",\n      text: \"Nesta homepage, selecione a ação que deseja tomar nos cards abaixo. Caso tenha dúvidas de qual o passo-a-passo proposto, acompanhe o modal disponível no canto direito inferior.\",\n    },\n    modalWarning: {\n      heading: \"Aviso\",\n      text: \"Não foi possível realizar a conexão com a base de dados através dos dados fornecidos. Por favor verifique as informações inseridas e tente novamente.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Aviso\",\n      text: \"Inicializando Dashboard Padrão.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Sucesso!\",\n      text: \"Conexão realizada com sucesso.\",\n      caption: \"\",\n    },\n    tabs: {\n      itensPerPage: \"Itens por página\",\n    },\n    home: {\n      welcome: \"Bem vindo ao Assistant Curator!\",\n      cardHeader1: \"Avaliação de conversação\",\n      cardHeader2: \"Desempenho na conversação\",\n      cardHeader3: \"Qualidade de Treinamento\",\n      cardContent1:\n        \"Apresenta a conversa entre cliente e assistente no nível de troca de mensagens para avaliação humana de sua assertividade, atribuindo uma pontuação (1 - 5).\",\n      cardContent2:\n        \"Ele fornece uma interface para a construção e visualização de painéis interativos, com o IBM Cognos Dashboard, que mostra o desempenho do Assistente ao longo do tempo.\",\n      cardContent3:\n        \"Mostra gráficos baseados em dados de Experimentos realizados utilizando as Intenções e a árvore de conversação do Assistente.\",\n    },\n    intentModal: {\n      description:\n        \"Para melhorar seu Assistente Watson, tome as seguintes medidas.\",\n      step1: \"Verificar dados\",\n      step2: \"Abra seu Assistant\",\n      step3: \"Edite as Intents\",\n      step4: \"Dê uma nota\",\n      step5: \"Dados de Conversas\",\n      step6: \"Rodar Experimentos\",\n      step7: \"Verificar e repetir\",\n      content1:\n        \"Veja os gráficos de treinamento das suas intents para encontrar possíveis confusões no seu Assisant. Esses gráficos são baseados somente na forma como seu Assistant está configurado.\",\n      content2:\n        \"Vá até a instância do seu Assistant e abra a página de intents da Skill de Diálogo que deseja alterar.\",\n      content3:\n        \"Faça as alterações necessárias, de acordo com os dados encontrados no passo 1. Você pode alterar ou remover os exemplos de uma intent com menos precisão.\",\n      content4:\n        \"Vá para a tela de Nota de Curadoria enriqueça os dados com uma nota humana para comparar com a confiança do Assistant. Para uma melhor análise, avalie pelo menos 50 mensagens.\",\n      content5:\n        \"Veja os gráficos de dados de interações do seu Assistant com seus usuários para melhor entender a como seus usuários estão interagindo com seu Assistant e verificar possíveis falhas na sua árvore de conversa e suas intents.\",\n      content6:\n        \"Depois de verificar os dados e fazer as alterações necessárias, roda a função de experimentos novamente para gerar novas métricas.\",\n      content7:\n        \"Depois de completar todos os passos você já terá uma nova visão do seu Assistant. Acompanhe o uso do Assistant e monitore as necessidades de alterações, repetindo esses passos.\",\n    },\n  },\n  es: {\n    headerSwitcher: {\n      save: \"Guardar\",\n      upToDate: \"Já actualizado\",\n      load: \"Cargar\",\n    },\n    infoTable: {\n      sendButton: \"Guardar Notas\",\n      group: \"Grupo\",\n    },\n    accountSelectionModal: {\n      heading: \"Seleccione la cuenta deseada\",\n      label: \"Cuentas disponibles\",\n      primaryText: \"Seleccione\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Cuentas\",\n    },\n    modal: {\n      heading: \"Información de conexión de Db2\",\n      label: \"Instancia y Tabla consultada\",\n      primaryText: \"Recargar\",\n      secondaryText: \"Guardar\",\n      selectAnOption: \"Seleccione una opción\",\n      alert: \"Seleccione una de las instancias enumeradas\",\n      inputLabel1: \"Seleccione la instancia de Db2 deseada\",\n      inputLabel2: \"Introduzca el título de la tabla a consultar\",\n    },\n    cognosModal: {\n      heading: \"Credenciales de uso de Cognos\",\n      label: \"Instancias consultadas\",\n      primaryText: \"Recargar\",\n      secondaryText: \"Guardar\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tablas\",\n      selectAnOption: \"Seleccione una opción\",\n      alert: \"Seleccione una de las instancias enumeradas\",\n      inputLabel1: \"Seleccione la instancia de Cognos deseada\",\n      inputLabel2: \"Seleccione la instancia de Cloudant deseada\",\n      inputLabel3: \"Inserte la base de datos Cloudant deseada\",\n      inputLabel4: \"Seleccione la instancia de Db2 deseada\",\n      inputLabel5: \"Inserte el enlace del módulo xsd\",\n      inputLabel6: \"Inserte el driver Jdbc\",\n      inputLabel7: \"Tabla de registros\",\n      inputLabel8: \"Tabla de conversaciónes\",\n      inputLabel9: \"Tabla de llamadas telefonicas\",\n      inputLabel10: \"Tabla de variables de contexto\",\n      inputLabel11: \"Tabla de ruta de conversación\",\n      inputLabel12: \"Tabla de resumen\",\n      inputLabel13: \"Tabla de distribución de clases\",\n      inputLabel14: \"Tabla de precisión @k\",\n      inputLabel15: \"Tabla de precisión de clase\",\n      inputLabel16: \"Tabla de intenciones confusas\",\n      inputLabel17: \"Tabla de precisión versus cobertura\",\n    },\n    saveModal: {\n      heading:\n        \"Ingrese el nombre que desea darle al Dashboard. Esto se establecerá automáticamente como el Dashboard default\",\n      label: \"Guardar Dashboard en Cloudant\",\n      primaryText: \"Salvar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nombre (ID) del Dashboard\",\n    },\n    loadModal: {\n      heading:\n        \"Ingrese el nombre del Dashboard que desea buscar. Esto se establecerá automáticamente como el Dashboard default\",\n      label: \"Busca de Dashboard en Cloudant\",\n      primaryText: \"Buscar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nombre (ID) del Dashboard\",\n    },\n    modalHelp: {\n      heading: \"Ayuda\",\n      text: \"Esta tabla muestra el intercambio de mensajes entre el cliente y el Asistente, destacando qué intención entendió el asistente en el mensaje recibido. Con esta información, el curador puede evaluar el desempeño del asistente a nivel del mensaje.\",\n    },\n    cognosModalHelp: {\n      heading: \"Ayuda\",\n      text: \"Esta página muestra un tablero interactivo que presenta métricas para respaldar el proceso de curación del asistente.\",\n    },\n    homeHelp: {\n      heading: \"Ayuda\",\n      text: \"En esta página de inicio, seleccione la acción que desea realizar de las tarjetas abajo. Si tienes dudas sobre el paso a paso propuesto, sigue el modal disponible en la esquina inferior derecha.\",\n    },\n    modalWarning: {\n      heading: \"Error!\",\n      text: \"No fue posible conectarse a la base de datos utilizando los datos proporcionados. Verifique la información ingresada y vuelva a intentarlo.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Aviso\",\n      text: \"Inicializando el Dashboard predeterminado.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Éxito!\",\n      text: \"Conexión exitosa.\",\n      caption: \"\",\n    },\n    tabs: {\n      itensPerPage: \"Artículos por página\",\n    },\n    home: {\n      welcome: \"¡Bienvenido a Assistant Curator!\",\n      cardHeader1: \"Evaluación de la conversación\",\n      cardHeader2: \"Conversación Rendimiento\",\n      cardHeader3: \"Calidad de la formación\",\n      cardContent1:\n        \"Presenta la conversación entre el cliente y el asistente en el nivel de intercambio de mensajes para la evaluación humana de su asertividad asignando una puntuación (1 - 5).\",\n      cardContent2:\n        \"Proporciona una interfaz para crear y visualizar cuadros de mando interactivos, con IBM Cognos Dashboard, que muestran el rendimiento del asistente a lo largo del tiempo.\",\n      cardContent3:\n        \"Muestra gráficos basados en los datos de los experimentos realizados con las Intenciones y el árbol de conversación del Asistente.\",\n    },\n    intentModal: {\n      description:\n        \"Para mejorar tu Watson Assistant sigue los siguientes pasos.\",\n      step1: \"Comprobar datos\",\n      step2: \"Abra su Asistente\",\n      step3: \"Edite sus intenciones\",\n      step4: \"Dar una nota\",\n      step5: \"Datos de la conversación\",\n      step6: \"Experimentos de ejecución\",\n      step7: \"Comprueba y repite\",\n      content1:\n        \"Vea los gráficos de entrenamiento de sus intentos para encontrar posibles confusiones en su Asistente. Estos gráficos se basan únicamente en la configuración de su Asistente.\",\n      content2:\n        \"Vaya a su instancia de Asistente y abra la página de intenciones de la Habilidad de Diálogo que desea cambiar.\",\n      content3:\n        \"Realice los cambios necesarios según los datos encontrados en el paso 1. Puede cambiar o eliminar los ejemplos de una intención con menos precisión.\",\n      content4:\n        \"Vá para a tela de Nota de Curadoria enriqueça os dados com uma nota humana para comparar com a confiança do Assistant. Para uma melhor análise, avalie pelo menos 50 mensagens.\",\n      content5:\n        \"Vea los gráficos de datos de las interacciones de su Asistente con sus usuarios para entender mejor cómo están interactuando sus usuarios con su Asistente y compruebe los posibles fallos en su árbol de conversación y sus intenciones.\",\n      content6:\n        \"Tras verificar los datos y realizar los cambios necesarios, ejecute de nuevo la función de experimentos para generar nuevas métricas.\",\n      content7:\n        \"Después de completar todos los pasos tendrás una nueva vista de tu Asistente. Siga el uso del Asistente y controle la necesidad de cambios repitiendo estos pasos.\",\n    },\n  },\n  en: {\n    headerSwitcher: {\n      save: \"Save\",\n      upToDate: \"Up to date\",\n      load: \"Load\",\n    },\n    infoTable: {\n      sendButton: \"Save Score\",\n      group: \"Group\",\n    },\n    accountSelectionModal: {\n      heading: \"Select the desired account\",\n      label: \"Available accounts\",\n      primaryText: \"Select\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Accounts\",\n    },\n    modal: {\n      heading: \"Db2 conection information\",\n      label: \"Instance and Table to be consulted\",\n      primaryText: \"Reload\",\n      secondaryText: \"Save\",\n      selectAnOption: \"Select an option\",\n      alert: \"Please select one of the listed instances\",\n      inputLabel1: \"Select the desired Db2 instance\",\n      inputLabel2: \"Enter the title of the table to be queried\",\n    },\n    cognosModal: {\n      heading: \"Cognos credentials\",\n      label: \"Consulted Instances\",\n      primaryText: \"Reload\",\n      secondaryText: \"Save\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tables\",\n      selectAnOption: \"Select an option\",\n      alert: \"Please select one of the listed instances\",\n      inputLabel1: \"Select the desired Cognos instance\",\n      inputLabel2: \"Select the desired Cloudant instance\",\n      inputLabel3: \"Enter the desired Cloudant database\",\n      inputLabel4: \"Select the desired Db2 instance\",\n      inputLabel5: \"Enter the xsd module link\",\n      inputLabel6: \"Enter the Jdbc driver\",\n      inputLabel7: \"Logs table\",\n      inputLabel8: \"Conversations table\",\n      inputLabel9: \"Calls table\",\n      inputLabel10: \"Context variables table\",\n      inputLabel11: \"Conversation path table\",\n      inputLabel12: \"Overview table\",\n      inputLabel13: \"Class Distribution table\",\n      inputLabel14: \"Precision @k table\",\n      inputLabel15: \"Class accuracy table\",\n      inputLabel16: \"Pair wise class errors table\",\n      inputLabel17: \"Accuracy vs coverage table\",\n    },\n    homeHelp: {\n      heading: \"Help\",\n      text: \"On this homepage, select the action you want to take on the cards below. If you are not sure about the proposed steps, follow the modal available in the lower right corner.\",\n    },\n    saveModal: {\n      heading:\n        \"Enter the name you want to give the Dashboard. This will automatically be set as the default Dashboard\",\n      label: \"Save Dashboard in Cloudant\",\n      primaryText: \"Save\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Dashboard name (ID)\",\n    },\n    loadModal: {\n      heading:\n        \"Enter the name of the Dashboard you want to search. This will automatically be set as the default Dashboard\",\n      label: \"Search Dashboard in Cloudant\",\n      primaryText: \"Search\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Dashboard name (ID)\",\n    },\n    modalHelp: {\n      heading: \"Help\",\n      text: \"This table displays the exchange of messages between client and Assistant, highlighting what intent was understood by the assistant in the received message. With this information, the curator can assess the assistant's performance at the message level.\",\n    },\n    cognosModalHelp: {\n      heading: \"Help\",\n      text: \"This page displays an interactive dashboard that presents metrics to support the Assistant curation process.\",\n    },\n    modalWarning: {\n      heading: \"Error!\",\n      text: \"It was not possible to connect through the supplied data. Please check the information and try again.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Warning\",\n      text: \"Initializing default Dashboard.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Success!\",\n      text: \"Successfully connected.\",\n      caption: \"\",\n    },\n    tabs: {\n      itensPerPage: \"Items per page\",\n    },\n    home: {\n      welcome: \"Welcome to Assistant Curator!\",\n      cardHeader1: \"Conversation Evaluation\",\n      cardHeader2: \"Conversation Performance\",\n      cardHeader3: \"Intent Training Quality\",\n      cardContent1:\n        \"Presents the conversation between client and assistant at the message exchange level for human evaluation of its assertiveness by assigning a score (1 - 5).\",\n      cardContent2:\n        \"It provides an interface for building and viewing interactive dashboards, with IBM Cognos Dashboard, that show the Assistant's performance over time.\",\n      cardContent3:\n        \"Shows graphs based on data from Experiments performed using the Intentions and the Assistant's conversation tree.\",\n    },\n    intentModal: {\n      description: \"To improve your Watson Assistant take the following steps.\",\n      step1: \"Check data\",\n      step2: \"Open your Assistant\",\n      step3: \"Edit Intents\",\n      step4: \"Give a note\",\n      step5: \"Conversation Data\",\n      step6: \"Run Experiments\",\n      step7: \"Check and repeat\",\n      content1:\n        \"Look at the training graphs of your intents to find possible confusions in your Assisant. These graphs are based only on how your Assistant is configured.\",\n      content2:\n        \"Go to your Assistant instance and open the intents page of the Dialog Skill you want to change.\",\n      content3:\n        \"Make the necessary changes, according to the data found in step 1. You can change or remove the examples of an intent with less precision.\",\n      content4:\n        \"Go to the Curator Note screen enrich the data with a human note to compare with Assistant's confidence. For the best analysis, rate at least 50 messages.\",\n      content5:\n        \"View data graphs of your Assistant's interactions with your users to better understand how your users are interacting with your Assistant and check for possible flaws in your conversation tree and its intents.\",\n      content6:\n        \"After verifying the data and making any necessary changes, you run the experiment function again to generate new metrics.\",\n      content7:\n        \"After completing all steps you have a new view of your Assistant. Track the usage of the Assistant and monitor the need for changes by repeating these steps.\",\n    },\n  },\n};\n","import { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, Select, SelectItem } from \"carbon-components-react\";\nimport { switchAccount } from \"../../helpers/apiCalls\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport \"./style.css\";\n\nexport default function AccountSelectionModal({}) {\n  const {\n    setLoading,\n    accountModalOpen,\n    setAccountModalOpen,\n    setWarningOpen,\n    setSuccessOpen,\n    accounts,\n    setAccount,\n    setAccountLoading,\n    language,\n  } = useGlobalState();\n\n  async function handleSubmit() {\n    setAccountLoading(true);\n    setWarningOpen(false);\n    setSuccessOpen(false);\n    setAccountModalOpen(false);\n    setLoading(true);\n  }\n\n  return (\n    <Modal\n      open={accountModalOpen}\n      modalHeading={textLanguage[language].accountSelectionModal.heading}\n      modalLabel={textLanguage[language].accountSelectionModal.label}\n      primaryButtonText={\n        textLanguage[language].accountSelectionModal.primaryText\n      }\n      secondaryButtonText={\n        textLanguage[language].accountSelectionModal.secondaryText\n      }\n      onRequestClose={() => {\n        setAccountModalOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Select\n        id=\"select-1\"\n        invalidText=\"A valid value is required\"\n        labelText={textLanguage[language].accountSelectionModal.inputLabel1}\n        onChange={(e) => {\n          switchAccount(JSON.parse(e.target.value).metadata.guid).then(() => {\n            localStorage.setItem(\"savedAccount\", e.target.value);\n            setAccount(JSON.parse(e.target.value));\n          });\n        }}\n      >\n        {accounts &&\n          accounts.resources.map((resource) => (\n            <SelectItem\n              text={resource.entity.name}\n              value={JSON.stringify(resource)}\n            />\n          ))}\n      </Select>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function HelpModal() {\n  const { language, helpOpen, setHelpOpen } = useGlobalState();\n\n  return (\n    <Modal\n      open={helpOpen}\n      modalHeading={textLanguage[language].modalHelp.heading}\n      onRequestClose={() => {\n        setHelpOpen(false);\n      }}\n      preventCloseOnClickOutside\n      passiveModal\n    >\n      <p>{textLanguage[language].modalHelp.text}</p>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function CognosHelpModal() {\n  const { language, cognosHelpOpen, setCognosHelpOpen } = useGlobalState();\n\n  return (\n    <Modal\n      open={cognosHelpOpen}\n      modalHeading={textLanguage[language].cognosModalHelp.heading}\n      onRequestClose={() => {\n        setCognosHelpOpen(false);\n      }}\n      preventCloseOnClickOutside\n      passiveModal\n    >\n      <p>{textLanguage[language].cognosModalHelp.text}</p>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function HomeHelp() {\n  const { language, homeHelp, setHomeHelpOpen } = useGlobalState();\n\n  return (\n    <Modal\n      open={homeHelp}\n      modalHeading={textLanguage[language].homeHelp.heading}\n      onRequestClose={() => {\n        setHomeHelpOpen(false);\n      }}\n      preventCloseOnClickOutside\n      passiveModal\n    >\n      <p>{textLanguage[language].homeHelp.text}</p>\n    </Modal>\n  );\n}\n","import { SideNav, SideNavItems, SideNavLink } from \"carbon-components-react\";\n\nimport {\n  ChartMultitype32,\n  Analytics32,\n  WatsonHealthMagnify32,\n  FaceAdd32,\n} from \"@carbon/icons-react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nimport \"./style.css\";\n\nexport default function SideMenu({ open }) {\n  const { language, history } = useGlobalState();\n\n  return (\n    <SideNav expanded={open} isRail>\n      <SideNavItems>\n        <SideNavLink\n          renderIcon={Analytics32}\n          onClick={() => history.push(`/train`)}\n        >\n          Intent Train Quality\n        </SideNavLink>\n        <SideNavLink\n          renderIcon={FaceAdd32}\n          onClick={() => history.push(`/dashboard`)}\n        >\n          Conversation Evaluation\n        </SideNavLink>\n        <SideNavLink\n          renderIcon={WatsonHealthMagnify32}\n          onClick={() => history.push(`/search`)}\n        >\n          Intent Search\n        </SideNavLink>\n        <SideNavLink\n          renderIcon={ChartMultitype32}\n          onClick={() => history.push(`/cognos`)}\n        >\n          Conversation Performance\n        </SideNavLink>\n      </SideNavItems>\n    </SideNav>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function WarningModal() {\n  const { language, setWarningOpen, warningOpen } = useGlobalState();\n\n  function handleClose() {\n    setWarningOpen(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"error\",\n    title: textLanguage[language].modalWarning.heading,\n    subtitle: textLanguage[language].modalWarning.text,\n    caption: textLanguage[language].modalWarning.caption,\n    iconDescription: \"Error\",\n    statusIconDescription: \"Error\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return warningOpen ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function StandardDashboardModal() {\n  const { language, setStandardDashboardModal, standardDashboardModal } =\n    useGlobalState();\n\n  function handleClose() {\n    setStandardDashboardModal(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"warning\",\n    title: textLanguage[language].standardDashboardModal.heading,\n    subtitle: textLanguage[language].standardDashboardModal.text,\n    caption: textLanguage[language].standardDashboardModal.caption,\n    iconDescription: \"Warning\",\n    statusIconDescription: \"Warning\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return standardDashboardModal ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function SuccessModal() {\n  const { language, setSuccessOpen, successOpen } = useGlobalState();\n\n  function handleClose() {\n    setSuccessOpen(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"success\",\n    title: textLanguage[language].modalSuccess.heading,\n    subtitle: textLanguage[language].modalSuccess.text,\n    caption: textLanguage[language].modalSuccess.caption,\n    iconDescription: \"Success\",\n    statusIconDescription: \"Success\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return successOpen ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Step1.49e967b1.png\";","export default __webpack_public_path__ + \"static/media/Step2.cd4779b7.png\";","export default __webpack_public_path__ + \"static/media/Step3.9e9254ad.png\";","export default __webpack_public_path__ + \"static/media/Step4.2ad24059.png\";","export default __webpack_public_path__ + \"static/media/Step5.4ed3df1c.png\";","export default __webpack_public_path__ + \"static/media/Step6.3309b7f6.png\";","import * as React from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport {\n  ComposedModal,\n  Button,\n  ModalFooter,\n  ModalHeader,\n  ProgressIndicator,\n  ProgressStep,\n} from \"carbon-components-react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button2 from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Step1 from \"./images/Step1.png\";\nimport Step2 from \"./images/Step2.png\";\nimport Step3 from \"./images/Step3.png\";\nimport Step4 from \"./images/Step4.png\";\nimport Step5 from \"./images/Step5.png\";\nimport Step6 from \"./images/Step6.png\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport { Help24 } from \"@carbon/icons-react\";\nimport \"./style.css\";\n\nconst images = [Step1, Step2, Step3, Step4, Step5, Step6, Step1];\n\nexport default function IntentHelpModal() {\n  const { intentHelpOpen, setIntentHelpOpen, language } = useGlobalState();\n\n  const steps = [\n    textLanguage[language].intentModal.step1,\n    textLanguage[language].intentModal.step2,\n    textLanguage[language].intentModal.step3,\n    textLanguage[language].intentModal.step4,\n    textLanguage[language].intentModal.step5,\n    textLanguage[language].intentModal.step6,\n    textLanguage[language].intentModal.step7,\n  ];\n\n  const content = [\n    textLanguage[language].intentModal.content1,\n    textLanguage[language].intentModal.content2,\n    textLanguage[language].intentModal.content3,\n    textLanguage[language].intentModal.content4,\n    textLanguage[language].intentModal.content5,\n    textLanguage[language].intentModal.content6,\n    textLanguage[language].intentModal.content7,\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const isStepOptional = (step) => {\n    // return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div id=\"modal\">\n      <Button\n        kind=\"primary\"\n        onClick={() => setIntentHelpOpen(true)}\n        hasIconOnly\n        renderIcon={Help24}\n        iconDescription=\"Help\"\n        id=\"button\"\n      ></Button>\n      <ComposedModal\n        id=\"wrapper\"\n        // hasScrollingContent\n        open={intentHelpOpen}\n        modalHeading={\"Curator Workflow\"}\n        // onRequestClose={() => setIntentHelpOpen(false)}\n        onClose={() => setIntentHelpOpen(false)}\n        preventCloseOnClickOutside\n        shouldSubmitOnEnter\n        size=\"lg\"\n      >\n        <ModalHeader title={\"Assistant Curator workflow\"} />\n        <p id=\"modalText\">{textLanguage[language].intentModal.description}</p>\n        <Box sx={{ width: \"100%\" }}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label, index) => {\n              const stepProps = {};\n              const labelProps = {};\n              if (isStepOptional(index)) {\n                labelProps.optional = (\n                  <Typography variant=\"caption\">Optional</Typography>\n                );\n              }\n              if (isStepSkipped(index)) {\n                stepProps.completed = false;\n              }\n              return (\n                <Step key={label} {...stepProps}>\n                  <StepLabel {...labelProps}>{label}</StepLabel>\n                </Step>\n              );\n            })}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                <Button2 onClick={handleReset}>Reset</Button2>\n              </Box>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                <img id=\"stepImg\" src={images[activeStep]}></img>\n                {content[activeStep]}\n              </Typography>\n            </React.Fragment>\n          )}\n        </Box>\n        <ModalFooter>\n          <Button\n            kind=\"secondary\"\n            onClick={handleBack}\n            disabled={activeStep === 0 ? true : false}\n          >\n            Back\n          </Button>\n          <Button\n            kind=\"primary\"\n            onClick={handleNext}\n            disabled={activeStep === steps.length - 1 ? true : false}\n          >\n            Next\n          </Button>\n        </ModalFooter>\n      </ComposedModal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport Settings20 from \"@carbon/icons-react/lib/settings/20\";\nimport Help20 from \"@carbon/icons-react/lib/help/20\";\nimport { Save20, Menu20, Close20 } from \"@carbon/icons-react\";\nimport {\n  Header,\n  HeaderName,\n  HeaderMenuItem,\n  HeaderGlobalAction,\n  HeaderGlobalBar,\n  HeaderPanel,\n  HeaderMenu,\n  Switcher,\n  SwitcherItem,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport AccountSelectionModal from \"../AccountSelectionModal\";\nimport HelpModal from \"../HelpModal\";\nimport CognosHelpModal from \"../CognosHelpModal\";\nimport HomeHelp from \"../HomeHelp\";\nimport SideMenu from \"../SideNav\";\n\nimport WarningModal from \"../WarningModal\";\nimport StandardDashboardModal from \"../StandardDashboardModal\";\nimport SuccessModal from \"../SuccessModal\";\nimport IntentHelperModal from \"../IntentHelperModal\";\n\nimport { switchAccount } from \"../../helpers/apiCalls\";\n\nimport { US, BR, ES } from \"country-flag-icons/react/3x2\";\n\nimport \"./style.css\";\nexport default function HeaderIcc({ modalOpen, helpOpen, renderButton }) {\n  const {\n    language,\n    setLanguage,\n    setSaveModalOpen,\n    setLoadModalOpen,\n    unsavedChanges,\n    history,\n    accounts,\n    account,\n    setAccount,\n    setAccountLoading,\n  } = useGlobalState();\n\n  const languageIcons = { pt: <BR />, es: <ES />, en: <US /> };\n  const [openSidePanel, setOpenSidePanel] = useState(false);\n  const [openSaveMenu, setOpenSaveMenu] = useState(false);\n\n  return (\n    <Header aria-label=\"IBM Innovation Studio\" id={\"Header\"}>\n      {!history.location.pathname.includes(\"login\") && (\n        <HeaderGlobalAction\n          className=\"navMenu\"\n          aria-label=\"Open menu\"\n          onClick={() => setOpenSidePanel(!openSidePanel)}\n        >\n          {openSidePanel ? <Close20 /> : <Menu20 />}\n        </HeaderGlobalAction>\n      )}\n      <HeaderName\n        prefix=\"IBM Innovation Studio\"\n        onClick={() => history.push(\"/home\")}\n      >\n        Assistant Curator\n      </HeaderName>\n      {!history.location.pathname.includes(\"login\") && (\n        <>\n          <SideMenu open={openSidePanel} />\n          <HeaderGlobalBar>\n            {renderButton && (\n              <HeaderGlobalAction\n                aria-label=\"Save\"\n                onClick={() => {\n                  openSaveMenu ? setOpenSaveMenu(false) : setOpenSaveMenu(true);\n                }}\n              >\n                {unsavedChanges ? (\n                  <Save20 style={{ fill: \"#4589ff\" }} />\n                ) : (\n                  <Save20 />\n                )}\n              </HeaderGlobalAction>\n            )}\n\n            <HeaderMenu menuLinkName={account.entity.name}>\n              {accounts.resources.map((acc) => (\n                <HeaderMenuItem\n                  id=\"accounts\"\n                  onClick={() => {\n                    switchAccount(acc.metadata.guid).then(() => {\n                      localStorage.setItem(\"savedAccount\", JSON.stringify(acc));\n                      setAccount(acc);\n                      setAccountLoading(true);\n                      modalOpen(true);\n                    });\n                  }}\n                >\n                  {acc.entity.name}\n                </HeaderMenuItem>\n              ))}\n            </HeaderMenu>\n\n            <HeaderMenu menuLinkName={languageIcons[language]}>\n              {Object.entries(languageIcons).map(([key, value]) => (\n                <HeaderMenuItem\n                  onClick={() => {\n                    setLanguage(key);\n                    localStorage.setItem(\"language\", key);\n                  }}\n                >\n                  {value}\n                  {` ${key.toUpperCase()}`}\n                </HeaderMenuItem>\n              ))}\n            </HeaderMenu>\n\n            <HeaderGlobalAction\n              aria-label=\"Settings\"\n              onClick={() => {\n                modalOpen(true);\n              }}\n            >\n              <Settings20 />\n            </HeaderGlobalAction>\n\n            <HeaderGlobalAction\n              aria-label=\"Help\"\n              onClick={() => {\n                helpOpen(true);\n              }}\n            >\n              <Help20 />\n            </HeaderGlobalAction>\n          </HeaderGlobalBar>\n\n          <HeaderPanel\n            aria-label=\"Header Panel\"\n            expanded={openSaveMenu}\n            style={{ height: \"100px\", maxWidth: \"145px\" }}\n          >\n            <Switcher aria-label=\"Switcher Container\">\n              <SwitcherItem\n                aria-label=\"Save\"\n                onClick={async () => {\n                  setOpenSaveMenu(false);\n                  setSaveModalOpen(true);\n                }}\n              >\n                {unsavedChanges\n                  ? textLanguage[language].headerSwitcher.save\n                  : textLanguage[language].headerSwitcher.upToDate}\n              </SwitcherItem>\n              <SwitcherItem\n                aria-label=\"Load\"\n                onClick={async () => {\n                  setOpenSaveMenu(false);\n                  setLoadModalOpen(true);\n                }}\n              >\n                {textLanguage[language].headerSwitcher.load}\n              </SwitcherItem>\n            </Switcher>\n          </HeaderPanel>\n          <AccountSelectionModal modalOpen={modalOpen} />\n          <HelpModal />\n          <CognosHelpModal />\n          <HomeHelp />\n          <WarningModal />\n          <StandardDashboardModal />\n          <SuccessModal />\n          <IntentHelperModal />\n        </>\n      )}\n    </Header>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport PropTypes from \"prop-types\";\nimport Rating from \"@mui/material/Rating\";\nimport SentimentVeryDissatisfiedIcon from \"@mui/icons-material/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@mui/icons-material/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@mui/icons-material/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@mui/icons-material/SentimentVerySatisfied\";\nimport { createRows } from \"../../helpers/helpers\";\n\nconst customIcons = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Dissatisfied\",\n  },\n  2: {\n    icon: <SentimentDissatisfiedIcon />,\n    label: \"Dissatisfied\",\n  },\n  3: {\n    icon: <SentimentSatisfiedIcon />,\n    label: \"Neutral\",\n  },\n  4: {\n    icon: <SentimentSatisfiedAltIcon />,\n    label: \"Satisfied\",\n  },\n  5: {\n    icon: <SentimentVerySatisfiedIcon />,\n    label: \"Very Satisfied\",\n  },\n};\n\nfunction IconContainer(props) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default function BasicRating({ conversationID, logID, defaultValue }) {\n  const { conversations, setConversations, setRowData } = useGlobalState();\n\n  function updateScore(newValue) {\n    conversations[conversationID].map((log) => {\n      if (log.LOGID === logID) {\n        log.SCORE = newValue;\n        createRows(conversations, setRowData);\n      }\n    });\n  }\n\n  return (\n    <Rating\n      name=\"highlight-selected-only\"\n      defaultValue={defaultValue}\n      IconContainerComponent={IconContainer}\n      highlightSelectedOnly\n      sx={{\n        \"& .MuiRating-iconFilled\": {\n          color: \"#0E61FE\",\n        },\n        \"& .MuiRating-iconEmpty\": {\n          color: \"#b5b5b5\",\n        },\n      }}\n      onChange={(e, newValue) => {\n        updateScore(newValue);\n      }}\n    />\n  );\n}\n","import BasicRating from \"../components/Rating\";\nimport api from \"../services/api\";\n\nexport function createRows(conversations, setRowData) {\n  let rowsAux = [];\n\n  Object.entries(conversations).map(([key, value]) => {\n    conversations[key].map((log) => {\n      let rowAux = {};\n\n      rowAux.id = log.LOGID;\n      rowAux.CONVERSATIONID = log.CONVERSATIONID;\n      rowAux.LOGID = log.LOGID;\n      rowAux.CLIENTMESSAGE = log.CLIENTMESSAGE;\n      rowAux.ASSISTANTMESSAGE = log.ASSISTANTMESSAGE;\n      rowAux.FIRSTINTENT = log.FIRSTINTENT;\n      rowAux.CLIENTTIMESTAMP = log.CLIENTTIMESTAMP;\n      rowAux.SCORE = (\n        <BasicRating\n          conversationID={log.CONVERSATIONID}\n          logID={log.LOGID}\n          defaultValue={log.SCORE}\n        />\n      );\n\n      rowsAux.push(rowAux);\n    });\n  });\n  setRowData(rowsAux);\n}\n\nexport async function getLogs(\n  connectionString,\n  tableName,\n  setConversations,\n  setConversationsByDay,\n  setIntentsByDay,\n  setDateFilter,\n  setSuccessOpen,\n  setLoading,\n  callback,\n  param\n) {\n  const response = await api.post(\"/getLogs\", {\n    connStr: connectionString,\n    table: tableName,\n  });\n  if (\n    response.data.conversations &&\n    Object.keys(response.data.conversations).length != 0\n  ) {\n    setSuccessOpen(true);\n    setConversations(response.data.conversations);\n    setDateFilter(Object.keys(response.data.conversationsByDay)[0]);\n    setConversationsByDay(response.data.conversationsByDay);\n    setIntentsByDay(response.data.intentsByDay);\n    setLoading(false);\n  } else {\n    callback(param);\n  }\n}\n\nexport async function sendScore(\n  conversations,\n  connectionString,\n  tableName,\n  setConversations\n) {\n  await api.post(\"/updateScore\", {\n    conversation: conversations,\n    connStr: connectionString,\n    table: tableName,\n  });\n\n  let updateRender = [];\n  Object.entries(conversations).map(([key, value]) => {\n    updateRender.push([key, value.filter((obj) => obj.SCORE === null)]);\n  });\n  updateRender = updateRender.filter(([key, value]) => value.length !== 0);\n\n  setConversations(Object.fromEntries(updateRender));\n}\n\nexport async function getCognosSession(username, password) {\n  return await api.post(\"/cognosSession\", {\n    username: username,\n    password: password,\n  });\n}\n\nexport async function sendToCloudant(\n  cloudantApi,\n  cloudantUrl,\n  cloudantDbName,\n  dashboardName,\n  cognosDashboard,\n  setWarningOpen\n) {\n  const response = await api.post(\"/insertDashboard\", {\n    apikey: cloudantApi,\n    url: cloudantUrl,\n    dbName: cloudantDbName,\n    docId: dashboardName,\n    document: cognosDashboard,\n  });\n  if (response.data.Error) {\n    setWarningOpen(true);\n    return response.data;\n  } else {\n    return response.data;\n  }\n}\n\nexport async function getFromCloudant(\n  ID,\n  cloudantApi,\n  cloudantUrl,\n  cloudantDbName,\n  setWarningOpen\n) {\n  const response = await api.post(\"/getDashboard\", {\n    apikey: cloudantApi,\n    url: cloudantUrl,\n    dbName: cloudantDbName,\n    docId: ID,\n  });\n\n  if (response.data.Error) {\n    setWarningOpen(true);\n    return response.data;\n  } else {\n    return response.data;\n  }\n}\n\nexport async function initializeSources(\n  xsd,\n  jdbcUrl,\n  driverClassName,\n  schema,\n  user,\n  password,\n  logsTable,\n  conversationTable,\n  callsTable,\n  contextTable,\n  conversationPathTable,\n  overviewTable,\n  classDistributionTable,\n  precisionAtKTable,\n  classAccuracyTable,\n  pairWiseClassErrorsTable,\n  accuracyVsCoverageTable\n) {\n  const response = await api.post(\"/initializeDashboard\", {\n    xsd: xsd,\n    jdbcUrl: jdbcUrl,\n    driverClassName: driverClassName,\n    schema: schema,\n    user: user,\n    password: password,\n    logsTable: logsTable,\n    conversationTable: conversationTable,\n    callsTable: callsTable,\n    contextTable: contextTable,\n    conversationPathTable: conversationPathTable,\n    overviewTable: overviewTable,\n    classDistributionTable: classDistributionTable,\n    precisionAtKTable: precisionAtKTable,\n    classAccuracyTable: classAccuracyTable,\n    pairWiseClassErrorsTable: pairWiseClassErrorsTable,\n    accuracyVsCoverageTable: accuracyVsCoverageTable,\n  });\n\n  delete response.data._id;\n  delete response.data._rev;\n\n  return response.data;\n}\n\nexport async function initializeExperiments(\n  xsd,\n  jdbcUrl,\n  driverClassName,\n  schema,\n  user,\n  password,\n  overviewTable,\n  classDistributionTable,\n  precisionAtKTable,\n  classAccuracyTable,\n  pairWiseClassErrorsTable,\n  accuracyVsCoverageTable\n) {\n  const response = await api.post(\"/initializeExperiments\", {\n    xsd: xsd,\n    jdbcUrl: jdbcUrl,\n    driverClassName: driverClassName,\n    schema: schema,\n    user: user,\n    password: password,\n    overviewTable: overviewTable,\n    classDistributionTable: classDistributionTable,\n    precisionAtKTable: precisionAtKTable,\n    classAccuracyTable: classAccuracyTable,\n    pairWiseClassErrorsTable: pairWiseClassErrorsTable,\n    accuracyVsCoverageTable: accuracyVsCoverageTable,\n  });\n\n  delete response.data._id;\n  delete response.data._rev;\n\n  return response.data;\n}\n\nexport function generateConnectionString(credential) {\n  const credentials = credential.credentials.connection.db2;\n  return `DATABASE=${credentials.database};HOSTNAME=${credentials.hosts[0].hostname};PORT=${credentials.hosts[0].port};PROTOCOL=TCPIP;UID=${credentials.authentication.username};PWD=${credentials.authentication.password};SECURITY=SSL;`;\n}\n\nexport function registerLogin(docId, document) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      resolve(\n        await api.post(\"/registerLogin\", { docId: docId, document: document })\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  });\n}\n\nexport const defaultValues = {\n  credentials: {\n    connectionString: null,\n    db2Username: null,\n    db2Password: null,\n    jdbcUrl: null,\n    cognosUsername: null,\n    cognosPassword: null,\n    cloudantApi: null,\n    cloudantUrl: null,\n  },\n  defaults: {\n    defaultDashboardName: null,\n    cloudantDbName: \"dashboards\",\n    xsd: \"https://ibm.com/daas/module/1.0/module.xsd\",\n    driverClassName: \"com.ibm.db2.jcc.DB2Driver\",\n    schema: \"CURATOR\",\n    logsTable: \"LOGS\",\n    conversationTable: \"CONVERSATIONS\",\n    callsTable: \"CALLS\",\n    contextTable: \"CONTEXTVARIABLES\",\n    conversationPathTable: \"CONVERSATIONPATH\",\n    overviewTable: \"OVERVIEW\",\n    classDistributionTable: \"CLASSDISTRIBUTION\",\n    precisionAtKTable: \"PRECISIONATK\",\n    classAccuracyTable: \"CLASSACCURACY\",\n    pairWiseClassErrorsTable: \"PAIRWISECLASSERRORS\",\n    accuracyVsCoverageTable: \"ACCURACYVSCOVERAGE\",\n  },\n};\n","import { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport {\n  Modal,\n  TextInput,\n  Select,\n  SelectItem,\n  Loading,\n} from \"carbon-components-react\";\nimport { getLogs, generateConnectionString } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport { getResourceKeys } from \"../../helpers/apiCalls\";\n\nimport \"./style.css\";\n\nexport default function ConfigModal() {\n  const {\n    language,\n    configOpen,\n    setLoading,\n    setConfigOpen,\n    setWarningOpen,\n    setSuccessOpen,\n    credentialsAndDefaults,\n    setCredentialsAndDefaults,\n    setConversations,\n    setConversationsByDay,\n    setIntentsByDay,\n    setDateFilter,\n    resources,\n    accountLoading,\n  } = useGlobalState();\n\n  const [selectedInstance, setSelectedInstance] = useState(null);\n\n  const [selectedCredential, setSelectedCredential] = useState(null);\n\n  useEffect(() => {\n    setSelectedInstance(resources.db2.body.resources[0]);\n  }, [resources]);\n\n  useEffect(async () => {\n    if (selectedInstance) {\n      const resourceKeys = await getResourceKeys(selectedInstance.guid);\n      setSelectedCredential(resourceKeys.resources[0]);\n    }\n  }, [selectedInstance]);\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    setSuccessOpen(false);\n    setConfigOpen(false);\n    setLoading(true);\n\n    const connStr = generateConnectionString(selectedCredential);\n    let temp = { ...credentialsAndDefaults };\n    temp.credentials.connectionString = connStr;\n    setCredentialsAndDefaults(temp);\n    await getLogs(\n      connStr,\n      credentialsAndDefaults.defaults.logsTable,\n      setConversations,\n      setConversationsByDay,\n      setIntentsByDay,\n      setDateFilter,\n      setSuccessOpen,\n      setLoading,\n      noConnection,\n      \"\"\n    );\n  }\n\n  function noConnection() {\n    setConversations({});\n    setWarningOpen(true);\n  }\n\n  return !accountLoading ? (\n    <Modal\n      open={configOpen}\n      modalHeading={textLanguage[language].modal.heading}\n      modalLabel={textLanguage[language].modal.label}\n      primaryButtonText={textLanguage[language].modal.primaryText}\n      secondaryButtonText={textLanguage[language].modal.secondaryText}\n      onRequestClose={() => {\n        setConfigOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Select\n        id=\"select-1\"\n        invalidText=\"A valid value is required\"\n        labelText={textLanguage[language].modal.inputLabel1}\n        onChange={(e) => {\n          if (e.target.value === \"placeholder\")\n            alert(textLanguage[language].modal.alert);\n          else setSelectedInstance(JSON.parse(e.target.value));\n        }}\n      >\n        <SelectItem\n          text={textLanguage[language].modal.selectAnOption}\n          value=\"placeholder\"\n        />\n        {resources.db2.body.resources.map((resource) => (\n          <SelectItem text={resource.name} value={JSON.stringify(resource)} />\n        ))}\n      </Select>\n\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-2\"\n        labelText={textLanguage[language].modal.inputLabel2}\n        placeholder={credentialsAndDefaults.defaults.logsTable}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          let temp = { ...credentialsAndDefaults };\n          temp.defaults.logsTable = e.target.value.toUpperCase();\n          setCredentialsAndDefaults(temp);\n        }}\n      />\n    </Modal>\n  ) : (\n    <Loading />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/capa.23177739.png\";","import { useGlobalState } from \"../../hooks/globalState\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"../../images/capa.png\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport \"./style.css\";\n\nexport default function HomeImage() {\n  const { language } = useGlobalState();\n\n  return (\n    <div id=\"flex\">\n      <p id=\"welcome\">{textLanguage[language].home.welcome}</p>\n      <div id=\"div\">\n        <img src={Image} id=\"image\"></img>\n      </div>\n    </div>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"carbon-components-react\";\nimport { ArrowRight32 } from \"@carbon/icons-react\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport \"./style.css\";\n\nexport default function HomeCards() {\n  const { language, history } = useGlobalState();\n\n  return (\n    <div id=\"cards\">\n      <div className=\"card\">\n        <h4>{textLanguage[language].home.cardHeader3}</h4>\n        <p>{textLanguage[language].home.cardContent3}</p>\n        <Button\n          kind=\"primary\"\n          onClick={() => history.push(`/train`)}\n          hasIconOnly\n          renderIcon={ArrowRight32}\n          iconDescription=\"Go to the page\"\n        ></Button>\n      </div>\n      <div className=\"card\">\n        <h4>{textLanguage[language].home.cardHeader1}</h4>\n        <p>{textLanguage[language].home.cardContent1}</p>\n        <Button\n          kind=\"primary\"\n          onClick={() => history.push(`/dashboard`)}\n          hasIconOnly\n          renderIcon={ArrowRight32}\n          iconDescription=\"Go to the page\"\n        ></Button>\n      </div>\n      <div className=\"card\">\n        <h4>{textLanguage[language].home.cardHeader2}</h4>\n        <p>{textLanguage[language].home.cardContent2}</p>\n        <Button\n          kind=\"primary\"\n          onClick={() => history.push(`/cognos`)}\n          hasIconOnly\n          renderIcon={ArrowRight32}\n          iconDescription=\"Go to the page\"\n        ></Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nimport ConfigModal from \"../../components/ConfigModal\";\nimport HomeImage from \"../../components/HomeImage\";\nimport HomeCards from \"../../components/HomeCards\";\n\nimport \"./style.css\";\n\nexport default function Home() {\n  const {\n    history,\n    account,\n    setLanguage,\n    setHomeHelpOpen,\n    setAccountModalOpen,\n    setSuccessOpen,\n    setWarningOpen,\n    setStandardDashboardModal,\n  } = useGlobalState();\n\n  useEffect(async () => {\n    if (account.entity.name === \"\") {\n      history.push(\"/login\");\n    } else {\n      setSuccessOpen(false);\n      setWarningOpen(false);\n      setStandardDashboardModal(false);\n\n      const storedLanguage = localStorage.getItem(\"language\");\n      if (storedLanguage) setLanguage(storedLanguage);\n\n      if (!localStorage.getItem(\"savedAccount\")) {\n        setAccountModalOpen(true);\n      }\n    }\n  }, []);\n\n  return (\n    <div id=\"homeBody\">\n      <Header modalOpen={setAccountModalOpen} helpOpen={setHomeHelpOpen} />\n      <ConfigModal />\n      <HomeImage />\n      <HomeCards />\n    </div>\n  );\n}\n","import \"./style.css\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableToolbar,\n  TableToolbarContent,\n  Button,\n} from \"carbon-components-react\";\nimport { sendScore } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nexport default function InfoTable({ ID, day, rowData }) {\n  const { conversations, setConversations, credentialsAndDefaults, language } =\n    useGlobalState();\n\n  const headerData = [\n    {\n      key: \"LOGID\",\n      header: \"logID\",\n    },\n    {\n      key: \"CLIENTMESSAGE\",\n      header: \"Client Message\",\n    },\n    {\n      key: \"ASSISTANTMESSAGE\",\n      header: \"Assistant Message\",\n    },\n    {\n      key: \"FIRSTINTENT\",\n      header: \"Intent identified\",\n    },\n    {\n      key: \"SCORE\",\n      header: \"Score (1 - 5)\",\n    },\n  ];\n\n  const filtered = rowData.filter((value) => {\n    if (day)\n      return (\n        (value.CONVERSATIONID === ID && value.CLIENTTIMESTAMP.includes(day)) ||\n        (value.FIRSTINTENT === ID && value.CLIENTTIMESTAMP.includes(day))\n      );\n    else return value.CONVERSATIONID === ID || value.FIRSTINTENT === ID;\n  });\n\n  return (\n    <DataTable\n      rows={filtered}\n      headers={headerData}\n      useZebraStyles\n      stickyHeader\n      size=\"compact\"\n    >\n      {({\n        rows,\n        headers,\n        getHeaderProps,\n        getTableProps,\n        getTableContainerProps,\n      }) => (\n        <TableContainer\n          title={`${textLanguage[language].infoTable.group}: ${\n            ID === \"\" ? \"-\" : ID\n          }`}\n          {...getTableContainerProps()}\n        >\n          <TableToolbar>\n            <TableToolbarContent>\n              <Button\n                onClick={() => {\n                  sendScore(\n                    conversations,\n                    credentialsAndDefaults.credentials.connectionString,\n                    credentialsAndDefaults.defaults.logsTable,\n                    setConversations\n                  );\n                }}\n              >\n                {textLanguage[language].infoTable.sendButton}\n              </Button>\n            </TableToolbarContent>\n          </TableToolbar>\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                {headers.map((header) => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id}>\n                  {row.cells.map((cell) => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </DataTable>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport InfoTable from \"../InfoTable\";\nimport { useEffect, useState } from \"react\";\n\nexport default function BasicTabs() {\n  const { rowData, conversationsByDay, dateFilter, startIndex, endIndex } =\n    useGlobalState();\n\n  function createLabel(rowData, conversationID) {\n    if (rowData.length > 0) {\n      const foundConversation = rowData.filter(\n        (row) => row.CONVERSATIONID === conversationID\n      );\n      if (foundConversation.length > 0) {\n        const timeStamp = foundConversation[0].CLIENTTIMESTAMP.split(\" \");\n        return timeStamp[1].slice(0, 8);\n      }\n    }\n  }\n\n  return (\n    <>\n      <Tabs type=\"container\">\n        {conversationsByDay[dateFilter]\n          .slice(startIndex, endIndex)\n          .map((conversationID) => {\n            const label = createLabel(rowData, conversationID);\n            if (\n              Object.values(\n                conversationsByDay[dateFilter].slice(startIndex, endIndex)\n              ).indexOf(conversationID) === 0\n            ) {\n              return (\n                <Tab id={\"firstTab\"} label={label ? label : \"DONE!\"}>\n                  <InfoTable ID={conversationID} rowData={rowData} />\n                </Tab>\n              );\n            } else {\n              return (\n                <Tab id={conversationID} label={label ? label : \"DONE!\"}>\n                  <InfoTable ID={conversationID} rowData={rowData} />\n                </Tab>\n              );\n            }\n          })}\n      </Tabs>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Pagination } from \"carbon-components-react\";\nimport Languages from \"../../helpers/languagesConfig\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nexport default function PaginationComponent() {\n  const {\n    conversationsByDay,\n    dateFilter,\n    itensPerPage,\n    setItensPerPage,\n    currentPage,\n    setCurrentPage,\n    language,\n  } = useGlobalState();\n\n  function selectFirstTab() {\n    const firstTab = document.getElementById(\"firstTab\");\n    if (firstTab) firstTab.click();\n  }\n\n  return (\n    <footer id=\"pagination\">\n      <Pagination\n        itemsPerPageText={Languages[language].tabs.itensPerPage}\n        page={currentPage}\n        pageNumberText=\"Page Number\"\n        pageSize={itensPerPage}\n        pageSizes={[9]}\n        totalItems={conversationsByDay[dateFilter].length}\n        onChange={(data) => {\n          setCurrentPage(data.page);\n          setItensPerPage(data.pageSize);\n          selectFirstTab();\n        }}\n      />\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination, Button } from \"carbon-components-react\";\nimport { PageLast32, PageFirst32 } from \"@carbon/icons-react\";\n\nimport Languages from \"../../helpers/languagesConfig\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nexport default function PaginationComponent() {\n  const {\n    conversationsByDay,\n    dateFilter,\n    setDateFilter,\n    setCurrentPage,\n    language,\n  } = useGlobalState();\n\n  const [dateToShow, setDateToShow] = useState(\"\");\n  useEffect(() => {\n    setDateToShow(dateFilter.split(\"-\").reverse().join(\"/\"));\n  }, [dateFilter]);\n\n  function previousDate() {\n    setDateFilter(\n      Object.keys(conversationsByDay)[\n        Object.keys(conversationsByDay).indexOf(dateFilter) - 1\n      ]\n    );\n    selectFirstTab();\n    setCurrentPage(1);\n  }\n  function nextDate() {\n    setDateFilter(\n      Object.keys(conversationsByDay)[\n        Object.keys(conversationsByDay).indexOf(dateFilter) + 1\n      ]\n    );\n    selectFirstTab();\n    setCurrentPage(1);\n  }\n  function selectFirstTab() {\n    const firstTab = document.getElementById(\"firstTab\");\n    if (firstTab) firstTab.click();\n  }\n  return (\n    <>\n      <div id=\"leftButtons\">\n        <Button\n          kind=\"ghost\"\n          hasIconOnly\n          iconDescription=\"Previous Date\"\n          renderIcon={PageFirst32}\n          onClick={() => {\n            previousDate();\n          }}\n          disabled={\n            Object.keys(conversationsByDay).indexOf(dateFilter) === 0\n              ? true\n              : false\n          }\n        />\n      </div>\n      <div id=\"dateText\">{`${dateToShow}`}</div>\n      <div id=\"rightButtons\">\n        <Button\n          kind=\"ghost\"\n          hasIconOnly\n          iconDescription=\"Next Date\"\n          renderIcon={PageLast32}\n          onClick={() => {\n            nextDate();\n          }}\n          disabled={\n            Object.keys(conversationsByDay).indexOf(dateFilter) ===\n            Object.keys(conversationsByDay).length - 1\n              ? true\n              : false\n          }\n        />\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport BasicTabs from \"../../components/Tabs\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { createRows, getLogs } from \"../../helpers/helpers\";\nimport { TabsSkeleton, DataTableSkeleton } from \"carbon-components-react\";\n\nimport ConfigModal from \"../../components/ConfigModal\";\nimport PaginationComponent from \"../../components/PaginationComponent\";\nimport DateChooser from \"../../components/DateChooser\";\n\nimport \"./style.css\";\n\nexport default function Dashboard() {\n  const {\n    history,\n    account,\n    setLanguage,\n    setLoading,\n    loading,\n    setHelpOpen,\n    setConfigOpen,\n    setSuccessOpen,\n    setWarningOpen,\n    setRowData,\n    conversations,\n    setConversations,\n    setConversationsByDay,\n    setIntentsByDay,\n    setDateFilter,\n    credentialsAndDefaults,\n    setCognosSession,\n  } = useGlobalState();\n\n  useEffect(async () => {\n    if (account.entity.name === \"\") {\n      history.push(\"/login\");\n    } else {\n      const storedLanguage = localStorage.getItem(\"language\");\n      if (storedLanguage) setLanguage(storedLanguage);\n\n      setSuccessOpen(false);\n      setWarningOpen(false);\n      setCognosSession(null);\n\n      if (conversations.length === 0)\n        await getLogs(\n          credentialsAndDefaults.credentials.connectionString,\n          credentialsAndDefaults.defaults.logsTable,\n          setConversations,\n          setConversationsByDay,\n          setIntentsByDay,\n          setDateFilter,\n          setSuccessOpen,\n          setLoading,\n          setConfigOpen,\n          true\n        );\n    }\n  }, []);\n\n  useEffect(() => {\n    createRows(conversations, setRowData);\n  }, [conversations]);\n\n  return (\n    <div>\n      <Header modalOpen={setConfigOpen} helpOpen={setHelpOpen} />\n      <div id=\"content\">\n        <ConfigModal />\n        {loading ? (\n          <>\n            <TabsSkeleton type=\"container\" />\n            <DataTableSkeleton />\n          </>\n        ) : (\n          <>\n            <div id=\"dateChooser\">\n              <DateChooser />\n            </div>\n            <BasicTabs />\n            <div id=\"footer\">\n              <div id=\"pagination\">\n                <PaginationComponent />\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionSkeleton,\n  Search,\n} from \"carbon-components-react\";\n\nimport InfoTable from \"../../components/InfoTable\";\nimport DateChooser from \"../../components/DateChooser\";\n\nimport { getLogs, groupByIntent, createRows } from \"../../helpers/helpers\";\n\nimport ConfigModal from \"../../components/ConfigModal\";\n\nimport \"./style.css\";\n\nexport default function SearchPage() {\n  const {\n    account,\n    history,\n    setLanguage,\n    loading,\n    setLoading,\n    setHelpOpen,\n    setConfigOpen,\n    setSuccessOpen,\n    setWarningOpen,\n    conversations,\n    setConversations,\n    setConversationsByDay,\n    intentsByDay,\n    setIntentsByDay,\n    dateFilter,\n    setDateFilter,\n    rowData,\n    setRowData,\n    credentialsAndDefaults,\n    setCognosSession,\n  } = useGlobalState();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(async () => {\n    if (account.entity.name === \"\") {\n      history.push(\"/login\");\n    } else {\n      const storedLanguage = localStorage.getItem(\"language\");\n      if (storedLanguage) setLanguage(storedLanguage);\n\n      setSuccessOpen(false);\n      setWarningOpen(false);\n      setCognosSession(null);\n\n      if (conversations.length === 0)\n        await getLogs(\n          credentialsAndDefaults.credentials.connectionString,\n          credentialsAndDefaults.defaults.logsTable,\n          setConversations,\n          setConversationsByDay,\n          setIntentsByDay,\n          setDateFilter,\n          setSuccessOpen,\n          setLoading,\n          setConfigOpen,\n          true\n        );\n    }\n  }, []);\n\n  useEffect(() => {\n    createRows(conversations, setRowData);\n  }, [conversations]);\n\n  const props = () => ({\n    className: \"some-class\",\n    size: \"xl\",\n    light: false,\n    disabled: false,\n    defaultValue: \"\",\n    labelText: \"Search\",\n    placeholder: \"Search\",\n  });\n\n  return (\n    <>\n      <Header\n        id=\"header-search\"\n        modalOpen={setConfigOpen}\n        helpOpen={setHelpOpen}\n      />\n      <div id=\"search-page\">\n        <div id=\"top\">\n          <div id=\"dateChooser\">\n            <DateChooser />\n          </div>\n          <Search\n            {...props()}\n            id=\"searchBar\"\n            onChange={(e) => {\n              if (!e.target.value) {\n                setSearchValue(\"\");\n              } else {\n                setSearchValue(e.target.value);\n              }\n            }}\n          />\n        </div>\n        <ConfigModal />\n        {loading ? (\n          <AccordionSkeleton />\n        ) : (\n          <div id=\"accords\">\n            <Accordion>\n              {intentsByDay[dateFilter].map((intent) =>\n                intent\n                  .toLowerCase()\n                  .replace(/\\s/g, \"\")\n                  .includes(searchValue.toLowerCase().replace(/\\s/g, \"\")) ? (\n                  <AccordionItem title={intent === \"\" ? \"-\" : intent}>\n                    <InfoTable ID={intent} day={dateFilter} rowData={rowData} />\n                  </AccordionItem>\n                ) : (\n                  \"\"\n                )\n              )}\n            </Accordion>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","(\"use strict\");\n\nvar _typeof =\n  typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n    ? function (obj) {\n        return typeof obj;\n      }\n    : function (obj) {\n        return obj &&\n          typeof Symbol === \"function\" &&\n          obj.constructor === Symbol &&\n          obj !== Symbol.prototype\n          ? \"symbol\"\n          : typeof obj;\n      };\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar INIT_TIMEOUT = 30000;\n\nvar CognosApi = (function () {\n  function CognosApi(options) {\n    _classCallCheck(this, CognosApi);\n\n    if (!options || !options.node) {\n      throw new Error(\n        \"Invalid options parameter passed into the constructor. Must provide both options.node and options.cognosRootURL in the options parameter.\"\n      );\n    }\n\n    this._node = options.node;\n    this._cognosURL = options.cognosRootURL;\n    this._testURL = options.testURL;\n    this._sessionCode = options.sessionCode;\n    this._initTimeout = options.initTimeout || INIT_TIMEOUT;\n\n    this._apiKey = CognosApi._createUID(\"capi\");\n    this._pendingRequests = {};\n    this._eventCallbacks = {};\n    this._eventReverseLookup = {};\n\n    if (options.language && typeof options.language === \"string\") {\n      var language = options.language.toLowerCase();\n      if (CognosApi.SUPPORTED_LANGUAGES[language]) {\n        this._language = language;\n      } else {\n        throw new Error(\"Unsupported language: \" + language);\n      }\n    } else {\n      this._language = \"en\";\n    }\n\n    // regular expression validate the incoming message header\n    this._message_regex = new RegExp(\n      \"#capi#(.+)#\" + this._apiKey + \"#(.*)$\",\n      \"g\"\n    );\n\n    /**\n     * Allows the caller to update the module definitions inside the dashboard specification\n     * @memberof CognosApi\n     * @function CognosApi#updateModuleDefinitions\n     * @param {String} dashboardSpec The dashboard specification\n     * @param {Function} callback A callback method which will be called with an array of module IDs.  This callback should return an array of objects containing the module ID (id) and the new module definition (module).\n     * @return {Promise} Promise that gets resolved with the updated dashboard specification\n     * @example\n     * const cognosApi = new CognosApi({\n     * \tcognosRootURL: 'http://localhost/bi/',\n     * \tnode: document.getElementById('containerDivId'),\n     *\tsessionCode: 'CD1a2b34567b8c901234d5',\n     *\tlanguage: 'en'\n     * });\n     *\n     * cognosApi.initialize().then(() => {\n     * \tconsole.log(cognosApi.dashboard);\n     * });\n     *\n     * cognosApi.updateModuleDefinitions(oldDashboardSpec, (moduleIds) => {\n     * \t// Implement the callback that returns an array of the new module definitions.\n     * \t// The array of module definitions corresponds to the array of moduleIds\n     * \treturn Promise.resolve(newModules);\n     * }).then((newDashboardSpec) => {\n     *\tconsole.log(newDashboardSpec);\n     * });\n     */\n    this.updateModuleDefinitions =\n      CognosApi._updateModuleDefinitions.bind(this);\n  }\n\n  _createClass(\n    CognosApi,\n    [\n      {\n        key: \"initialize\",\n        value: function initialize() {\n          var _this = this;\n\n          if (!this._readyPromise) {\n            this._readyPromise = new Promise(function (resolve, reject) {\n              // setup the initialize timeout\n              // var timeout = setTimeout(\n              //   _this._onInitTimeout.bind(_this, reject),\n              //   _this._initTimeout\n              // );\n\n              // create the API service container\n              _this._initializeContainer();\n              // initialize the API service\n              _this._initializeService().then(function () {\n                // clear the init timeout\n                // clearTimeout(timeout);\n\n                // wait for the APIs to be initialized\n                _this._sendMessage(\n                  {\n                    apiId: _this._apiKey,\n                    actionId: CognosApi._createUID(CognosApi.APISERVICE_INIT),\n                    name: CognosApi.APISERVICE_INIT,\n                  },\n                  resolve,\n                  reject\n                );\n              });\n            });\n          }\n          return this._readyPromise;\n        },\n\n        /**\n         * Attach an {@link CognosApi#EVENTS event} handler function for the root CognosApi\n         * @memberof CognosApi\n         * @function CognosApi#on\n         * @param {string} eventName - name of the event\n         * @callback cb - event handler callback\n         */\n      },\n      {\n        key: \"on\",\n        value: function on(eventName, cb) {\n          if (!this._eventReverseLookup[cb]) {\n            this._sendMessage(\n              {\n                apiId: this._apiKey,\n                actionId: CognosApi._createUID(CognosApi.APISERVICE_ON),\n                name: CognosApi.APISERVICE_ON,\n                parameters: Array.prototype.slice.call(arguments),\n              },\n              cb\n            );\n          }\n        },\n\n        /**\n         * Dettach an {@link CognosApi#EVENTS event} handler function for the root CognosApi\n         * @memberof CognosApi\n         * @function CognosApi#on\n         * @param {string} eventName - name of the event\n         * @callback cb - event handler callback\n         */\n      },\n      {\n        key: \"off\",\n        value: function off(eventName, cb) {\n          if (this._eventReverseLookup[cb]) {\n            this._sendMessage(\n              {\n                apiId: this._apiKey,\n                actionId: this._eventReverseLookup[cb],\n                name: CognosApi.APISERVICE_OFF,\n                parameters: Array.prototype.slice.call(arguments),\n              },\n              cb\n            );\n          }\n        },\n\n        /**\n         * initialization timeout handler\n         * @private\n         */\n      },\n      // {\n      //   key: \"_onInitTimeout\",\n      //   value: function _onInitTimeout(reject) {\n      //     this._cleanupContainer();\n      //     reject(\n      //       new Error(\"Initialization timeout. \" + this._initTimeout + \"ms\")\n      //     );\n      //   },\n\n      //   /**\n      //    * Initialize the CAPI service container\n      //    * @private\n      //    */\n      // },\n      {\n        key: \"_initializeContainer\",\n        value: function _initializeContainer() {\n          var container = document.createElement(\"iframe\");\n\n          container.src = this._buildSourceUrl();\n          container.setAttribute(\"class\", CognosApi.APISERVICE_CLASS);\n          container.setAttribute(\"style\", \"height:100%; width:100%;\");\n          container.setAttribute(\"frameBorder\", \"0\");\n\n          // append the container to the root node\n          this._node.innerHTML = \"\";\n          this._node.appendChild(container);\n\n          // keep the iframe contentWindow as the messaging target\n          this._target = container.contentWindow;\n          this._targetOrigin = (/(https*:\\/\\/[^\\/]+)/.exec(this._cognosURL) || [\n            window.location.origin,\n          ])[0]; // eslint-disable-line\n        },\n\n        /**\n         * Closes the CognosApi client.\n         * @memberof CognosApi\n         * @function CognosApi#close\n         * @return {Promise} Promise that gets resolved with a Api instance is successfully closed\n         * @example\n         * const cognosApi = new CognosApi({\n         * \tcognosRootURL: 'http://localhost/bi/',\n         * \tnode: document.getElementById('containerDivId'),\n         *\tsessionCode: 'CD1a2b34567b8c901234d5',\n         *\tlanguage: 'en'\n         * });\n         * ...\n         * cognosApi.close();\n         */\n      },\n      {\n        key: \"close\",\n        value: function close() {\n          var _this2 = this;\n\n          return new Promise(function (resolve, reject) {\n            _this2._destroyService().then(\n              function (obj) {\n                // remove all injected apis\n                _this2._cleanupApiService();\n                // clean up the container node\n                _this2._cleanupContainer();\n                resolve(obj);\n              },\n              function (err) {\n                reject(err);\n              }\n            );\n          });\n        },\n      },\n      {\n        key: \"_buildSourceUrl\",\n        value: function _buildSourceUrl() {\n          if (this._testURL) {\n            return this._testURL;\n          } else {\n            var root =\n              this._cognosURL +\n              (this._cognosURL.indexOf(\"?\") === -1 ? \"?\" : \"&\");\n            var params = {\n              perspective: \"postMessageApiLoader\",\n              apiKey: this._apiKey,\n              parentOrigin: window.location.origin,\n              sessionCode: this._sessionCode,\n              contentLanguage: this._language,\n            };\n            return (\n              root +\n              Object.keys(params)\n                .map(function (k) {\n                  return (\n                    encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n                  );\n                })\n                .join(\"&\")\n            );\n          }\n        },\n\n        /**\n         * Clean up the injected apis\n         * @private\n         */\n      },\n      {\n        key: \"_cleanupApiService\",\n        value: function _cleanupApiService() {\n          var _this3 = this;\n\n          // remove the message handler\n          if (this._messageHandler) {\n            window.removeEventListener(\"message\", this._messageHandler, false);\n          }\n\n          // clean up all apis\n          Object.keys(this).forEach(function (memberName) {\n            if (\n              memberName.indexOf(\"_\") !== 0 &&\n              _typeof(_this3[memberName]) === \"object\" &&\n              _this3[memberName].apiId\n            ) {\n              delete _this3[memberName];\n            }\n          });\n\n          this._pendingRequests = {};\n          this._eventCallbacks = {};\n          this._eventReverseLookup = {};\n          this._messageHandler = null;\n          this.apiId = null;\n        },\n\n        /**\n         * Clean up the iframe container\n         * @private\n         */\n      },\n      {\n        key: \"_cleanupContainer\",\n        value: function _cleanupContainer() {\n          if (this._node) {\n            var iframes =\n              this._node.getElementsByClassName(CognosApi.APISERVICE_CLASS) ||\n              [];\n            if (iframes.length === 1) {\n              this._node.removeChild(iframes[0]);\n            }\n          }\n\n          this._readyPromise = null;\n          this._targetOrigin = null;\n          this._target = null;\n        },\n\n        /**\n         * Wait for the CognosApi service to initialize\n         * @private\n         * @return {Promise} Promise that gets resolved when the CognosApi service initialization is complete\n         */\n      },\n      {\n        key: \"_initializeService\",\n        value: function _initializeService() {\n          var _this4 = this;\n\n          this._messageHandler = this._receiveMessage.bind(this);\n          window.addEventListener(\"message\", this._messageHandler, false);\n\n          return new Promise(function (resolve, reject) {\n            _this4._registerResponseCallbacks(_this4._apiKey, resolve, reject);\n          });\n        },\n\n        /**\n         * Make a request to destroy the service\n         * @private\n         * @return {Promise} Promise that gets resolved when the service finishes terminate\n         */\n      },\n      {\n        key: \"_destroyService\",\n        value: function _destroyService() {\n          var _this5 = this;\n\n          return new Promise(function (resolve, reject) {\n            _this5._sendMessage(\n              {\n                apiId: _this5._apiKey,\n                actionId: CognosApi._createUID(CognosApi.APISERVICE_DESTROY),\n                name: CognosApi.APISERVICE_DESTROY,\n              },\n              resolve,\n              reject\n            );\n          });\n        },\n\n        /**\n         * Register the Promise callbacks that are created for each postMessage requests\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {function} callback function to be used when the postMessage response comes back successfully\n         * @param {function} callback function to be used when the postMessage response comes back as a failure\n         */\n      },\n      {\n        key: \"_registerResponseCallbacks\",\n        value: function _registerResponseCallbacks(id, success, fail) {\n          if (id && success) {\n            this._pendingRequests[id] = {\n              success: success,\n              fail: fail,\n            };\n          }\n        },\n\n        /**\n         * Invoke the resolve callback for the request that has returned successfully\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {any} the resolved value\n         */\n      },\n      {\n        key: \"_resolveResponseCallbacks\",\n        value: function _resolveResponseCallbacks(id, obj) {\n          if (id && this._pendingRequests[id]) {\n            this._pendingRequests[id].success(obj);\n            delete this._pendingRequests[id];\n          }\n        },\n\n        /**\n         * Invoke the reject callback for the request that has returned as a failure\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {object} the error object\n         */\n      },\n      {\n        key: \"_rejectResponseCallbacks\",\n        value: function _rejectResponseCallbacks(id, obj) {\n          if (id && this._pendingRequests[id]) {\n            this._pendingRequests[id].fail(obj);\n            delete this._pendingRequests[id];\n          }\n        },\n\n        /**\n         * Register an event callback\n         * @private\n         */\n      },\n      {\n        key: \"_registerEventCallbacks\",\n        value: function _registerEventCallbacks(id, callback) {\n          if (id && callback) {\n            this._eventCallbacks[id] = callback;\n            this._eventReverseLookup[callback] = id;\n          }\n        },\n\n        /**\n         * Unregister an event callback\n         * @private\n         */\n      },\n      {\n        key: \"_unregisterEventCallbacks\",\n        value: function _unregisterEventCallbacks(id, callback) {\n          if (id && callback && this._eventReverseLookup[callback] === id) {\n            delete this._eventCallbacks[id];\n            delete this._eventReverseLookup[callback];\n          }\n        },\n\n        /**\n         * Handle event by invoking the corresponding callback\n         * @private\n         */\n      },\n      {\n        key: \"_handleEventCallbacks\",\n        value: function _handleEventCallbacks(id, obj) {\n          if (id && typeof this._eventCallbacks[id] === \"function\") {\n            this._eventCallbacks[id].call(this._eventCallbacks[id], obj);\n          }\n        },\n\n        /**\n         * Invoke a postMessage to the target window.\n         * Callbacks are registered which gets invoked when the corresponding response is returned\n         * @private\n         * @param {object} Payload object to be post to the target window\n         * @param {function} Resolve callback function\n         * @param {function} Reject callback function\n         */\n      },\n      {\n        key: \"_sendMessage\",\n        value: function _sendMessage(obj, success, fail) {\n          if (this._target) {\n            if (obj.name === \"on\") {\n              this._registerEventCallbacks(obj.actionId, success);\n            } else if (obj.name === \"off\") {\n              this._unregisterEventCallbacks(obj.actionId, success);\n            } else {\n              this._registerResponseCallbacks(obj.actionId, success, fail);\n            }\n            this._target.postMessage(\n              this._createMessage(obj),\n              this._targetOrigin\n            );\n          }\n        },\n\n        /**\n         * Message event handler to handle messages posted by the inner iframe\n         * @private\n         * @param {object} Event object\n         */\n      },\n      {\n        key: \"_receiveMessage\",\n        value: function _receiveMessage(event) {\n          // Only accept message from the iframe we know about\n          if (event.origin !== this._targetOrigin) {\n            return;\n          }\n          var obj = this._parseMessage(event.data);\n          if (obj !== null) {\n            if (!obj.status || obj.status === \"success\") {\n              switch (obj.type) {\n                case \"ready\":\n                  this._resolveResponseCallbacks(this._apiKey);\n                  break;\n                case \"api\":\n                  // eslint-disable-line\n                  // expand the api response by either injecting to the API to the root or creating an new API object\n                  var resolvedAPI =\n                    obj.actionId.indexOf(CognosApi.APISERVICE_INIT) === 0\n                      ? this\n                      : {};\n                  this._injectAPI(resolvedAPI, obj.payload);\n                  this._resolveResponseCallbacks(obj.actionId, resolvedAPI);\n                  break;\n                case \"event\":\n                  this._handleEventCallbacks(obj.actionId, obj.payload);\n                  break;\n                default:\n                  // simply resolve with the raw payload\n                  this._resolveResponseCallbacks(obj.actionId, obj.payload);\n              }\n            } else {\n              this._rejectResponseCallbacks(obj.actionId, obj.payload);\n            }\n          }\n        },\n\n        /**\n         * Create a message with the CAPI header prepended to the message\n         * @private\n         * @param {object} Payload object\n         */\n      },\n      {\n        key: \"_createMessage\",\n        value: function _createMessage(obj) {\n          return (\n            CognosApi.APIHEADER +\n            CognosApi.APIHEADER_DELIMITER +\n            this._apiKey +\n            CognosApi.APIHEADER_DELIMITER +\n            JSON.stringify(obj)\n          );\n        },\n\n        /**\n         * Parse the response message.\n         * @private\n         * @return Response payload object\n         */\n      },\n      {\n        key: \"_parseMessage\",\n        value: function _parseMessage(data) {\n          var result = this._message_regex.exec(data);\n          if (\n            (typeof result === \"undefined\" ? \"undefined\" : _typeof(result)) ===\n              \"object\" &&\n            result !== null\n          ) {\n            this._message_regex.lastIndex = 0;\n            return JSON.parse(result[2]);\n          }\n          return null;\n        },\n\n        /**\n         * Inject the API spec returned by the API service to the client API object\n         * @private\n         * @param {object} client API object\n         * @param {object} API spec that describes an API\n         */\n      },\n      {\n        key: \"_injectAPI\",\n        value: function _injectAPI(api, apiSpec) {\n          var _this6 = this;\n\n          Object.keys(apiSpec).forEach(function (memberName) {\n            if (memberName === \"apiId\") {\n              api[memberName] = apiSpec[memberName];\n            } else if (apiSpec[memberName].apiId) {\n              // new nested API needs to built recursively\n              api[memberName] = {};\n              _this6._injectAPI(api[memberName], apiSpec[memberName]);\n            } else {\n              if (apiSpec[memberName].type === \"enum\") {\n                api[memberName] = apiSpec[memberName].values;\n              } else if (apiSpec[memberName].type === \"method\") {\n                api[memberName] = _this6._getAPIMethod(\n                  memberName,\n                  apiSpec.apiId\n                );\n              }\n            }\n          });\n        },\n\n        /**\n         * Generate an API proxy method to be injected to the client API object\n         * @private\n         * @param {string} Method name\n         * @param {string} Identifier of the API\n         */\n      },\n      {\n        key: \"_getAPIMethod\",\n        value: function _getAPIMethod(methodName, apiId) {\n          var _this7 = this;\n\n          // predefined event on/off methods\n          if (methodName === \"on\") {\n            return function () {\n              for (\n                var _len = arguments.length, args = Array(_len), _key = 0;\n                _key < _len;\n                _key++\n              ) {\n                args[_key] = arguments[_key];\n              }\n\n              var params = Array.prototype.slice.call(args);\n              var callback = params[1];\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: CognosApi._createUID(methodName),\n                  name: methodName,\n                  parameters: params,\n                },\n                callback,\n                callback\n              );\n            };\n          } else if (methodName === \"off\") {\n            return function () {\n              for (\n                var _len2 = arguments.length, args = Array(_len2), _key2 = 0;\n                _key2 < _len2;\n                _key2++\n              ) {\n                args[_key2] = arguments[_key2];\n              }\n\n              var params = Array.prototype.slice.call(args);\n              var callback = params[1];\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: _this7._eventReverseLookup[callback],\n                  name: methodName,\n                  parameters: params,\n                },\n                callback,\n                callback\n              );\n            };\n          }\n\n          // general api methods\n          return function () {\n            for (\n              var _len3 = arguments.length, args = Array(_len3), _key3 = 0;\n              _key3 < _len3;\n              _key3++\n            ) {\n              args[_key3] = arguments[_key3];\n            }\n\n            var params = Array.prototype.slice.call(args);\n            return new Promise(function (resolve, reject) {\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: CognosApi._createUID(methodName),\n                  name: methodName,\n                  parameters: params,\n                },\n                resolve,\n                reject\n              );\n            });\n          };\n        },\n\n        /**\n         * Static private method to to update the modules in the dashboard spec.\n         * @static\n         * @private\n         */\n      },\n    ],\n    [\n      {\n        key: \"_updateModuleDefinitions\",\n        value: function _updateModuleDefinitions(dashboardSpec, callback) {\n          if (\n            !dashboardSpec ||\n            !dashboardSpec.dataSources ||\n            !dashboardSpec.dataSources.sources\n          ) {\n            return Promise.resolve(dashboardSpec);\n          }\n\n          var moduleClientIds = [];\n          dashboardSpec.dataSources.sources.forEach(function (source) {\n            if (source.clientId) {\n              moduleClientIds.push(source.clientId);\n            }\n          });\n\n          if (moduleClientIds.length === 0) {\n            return Promise.resolve(dashboardSpec);\n          }\n\n          var result = callback(moduleClientIds);\n          if (result && typeof result.then === \"function\") {\n            return result.then(function (newModules) {\n              return CognosApi._doModuleUpdate(dashboardSpec, newModules);\n            });\n          }\n\n          return Promise.resolve(\n            CognosApi._doModuleUpdate(dashboardSpec, result)\n          );\n        },\n\n        /**\n         * Static private method to to update the modules in the dashboard spec.\n         * @static\n         * @private\n         */\n      },\n      {\n        key: \"_doModuleUpdate\",\n        value: function _doModuleUpdate(dashboardSpec, newModules) {\n          var cloneDashboardSpec = JSON.parse(JSON.stringify(dashboardSpec));\n          if (newModules) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (\n                var _iterator =\n                    cloneDashboardSpec.dataSources.sources[Symbol.iterator](),\n                  _step;\n                !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n                _iteratorNormalCompletion = true\n              ) {\n                var source = _step.value;\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                  for (\n                    var _iterator2 = newModules[Symbol.iterator](), _step2;\n                    !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next())\n                      .done);\n                    _iteratorNormalCompletion2 = true\n                  ) {\n                    var newModule = _step2.value;\n\n                    if (newModule.id === source.clientId) {\n                      if (newModule.module) {\n                        source.module = newModule.module;\n                      }\n                      if (newModule.name) {\n                        source.name = newModule.name;\n                      }\n                      if (newModule.newId && newModule.id !== newModule.newId) {\n                        source.clientId = newModule.newId;\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                      _iterator2.return();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          }\n\n          return cloneDashboardSpec;\n        },\n\n        /**\n         * Static private method to create an unique identifier prepended with a give name\n         * @static\n         * @private\n         */\n      },\n      {\n        key: \"_createUID\",\n        value: function _createUID(prepend) {\n          var uid = Date.now().valueOf();\n          CognosApi.__uid = CognosApi.__uid === uid ? uid + 1 : uid;\n          return prepend + \"_\" + CognosApi.__uid.toString(16);\n        },\n      },\n    ]\n  );\n\n  return CognosApi;\n})();\n\nCognosApi.EVENTS = {\n  /** Request error events.<br>\n Allows users to receive HTTP request error events. */\n  REQUEST_ERROR: \"api:error:request\",\n};\n\n/**\n * Constant for Api message header and initialization\n * @private\n */\nCognosApi.APIHEADER_DELIMITER = \"#\";\nCognosApi.APIHEADER_MARKER = \"capi\";\nCognosApi.APIHEADER_VERSION = \"v1\";\nCognosApi.APIHEADER =\n  CognosApi.APIHEADER_DELIMITER +\n  CognosApi.APIHEADER_MARKER +\n  CognosApi.APIHEADER_DELIMITER +\n  CognosApi.APIHEADER_VERSION;\n\nCognosApi.APISERVICE_INIT = \"getAppApi\";\nCognosApi.APISERVICE_ON = \"on\";\nCognosApi.APISERVICE_OFF = \"off\";\nCognosApi.APISERVICE_DESTROY = \"destroyAppApi\";\nCognosApi.APISERVICE_CLASS = \"capi-service\";\n\nCognosApi.SUPPORTED_LANGUAGES = Object.freeze({\n  cs: \"Czech\",\n  da: \"Danish\",\n  de: \"German\",\n  en: \"English\",\n  es: \"Spanish\",\n  fi: \"Finnish\",\n  fr: \"French\",\n  hr: \"Croatian\",\n  hu: \"Hungarian\",\n  it: \"Italian\",\n  ja: \"Japanese\",\n  kk: \"Kazakh\",\n  ko: \"Korean\",\n  nb: \"Norwegian Bokmål\",\n  nl: \"Dutch\",\n  no: \"Norwegian\",\n  pl: \"Polish\",\n  pt: \"Portuguese\",\n  \"pt-br\": \"Portuguese (Brazil)\",\n  ro: \"Romanian\",\n  ru: \"Russian\",\n  sl: \"Slovenian\",\n  sv: \"Swedish\",\n  th: \"Thai\",\n  tr: \"Turkish\",\n  zh: \"Chinese\",\n  \"zh-cn\": \"Chinese (China)\",\n  \"zh-tw\": \"Chinese (Taiwan)\",\n});\n\nexport default CognosApi;\n","import React from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { TextInput } from \"carbon-components-react\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nexport default function Input({ index, field, upperCase }) {\n  const { language, credentialsAndDefaults, setCredentialsAndDefaults } =\n    useGlobalState();\n\n  function handleChange(e) {\n    let temp = { ...credentialsAndDefaults };\n    temp.defaults[field] = upperCase\n      ? e.target.value.toUpperCase()\n      : e.target.value;\n    setCredentialsAndDefaults(temp);\n  }\n  return (\n    <TextInput\n      data-modal-primary-focus\n      id={`text-input-${index}`}\n      labelText={textLanguage[language].cognosModal[`inputLabel${index}`]}\n      placeholder={credentialsAndDefaults.defaults[field]}\n      style={{ marginBottom: \"1rem\" }}\n      onChange={handleChange}\n    />\n  );\n}\n","import React from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { Select, SelectItem } from \"carbon-components-react\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nexport default function CustomSelect({ index, setSelection, field }) {\n  const { resources, language } = useGlobalState();\n\n  return (\n    <Select\n      id={`select-${index}`}\n      invalidText=\"A valid value is required\"\n      labelText={textLanguage[language].cognosModal[`inputLabel${index}`]}\n      onChange={(e) => {\n        if (e.target.value === \"placeholder\")\n          alert(textLanguage[language].cognosModal.alert);\n        else setSelection(JSON.parse(e.target.value));\n      }}\n    >\n      <SelectItem\n        text={textLanguage[language].cognosModal.selectAnOption}\n        value=\"placeholder\"\n      />\n      {resources[field].body.resources.map((resource) => (\n        <SelectItem text={resource.name} value={JSON.stringify(resource)} />\n      ))}\n    </Select>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Tabs, Tab, Loading } from \"carbon-components-react\";\nimport TextInput from \"../TextInput\";\nimport Select from \"../Select\";\nimport { getCognosSession } from \"../../helpers/helpers\";\nimport { getResourceKeys } from \"../../helpers/apiCalls\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function CognosConfigModal() {\n  const {\n    history,\n    language,\n    cognosConfigOpen,\n    setCognosConfigOpen,\n    credentialsAndDefaults,\n    setCredentialsAndDefaults,\n    setCognosSession,\n    setWarningOpen,\n    setUnsavedChanges,\n    accountLoading,\n    setCognosDashboard,\n  } = useGlobalState();\n\n  const [cognosInstance, setCognosInstance] = useState(null);\n  const [cloudantInstance, setCloudantInstance] = useState(null);\n  const [db2Instance, setDb2Instance] = useState(null);\n\n  useEffect(() => {\n    if (cognosInstance) handleCognosCredentials();\n  }, [cognosInstance]);\n\n  useEffect(() => {\n    if (cloudantInstance) handleCloudantCredentials();\n  }, [cloudantInstance]);\n\n  useEffect(() => {\n    if (db2Instance) handleDb2Credentials();\n  }, [db2Instance]);\n\n  async function handleCognosCredentials() {\n    const resourceKeys = await getResourceKeys(cognosInstance.guid).catch(() =>\n      history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n    let temp = { ...credentialsAndDefaults };\n    temp.credentials.cognosUsername = credentials.client_id;\n    temp.credentials.cognosPassword = credentials.client_secret;\n    setCredentialsAndDefaults(temp);\n  }\n\n  async function handleCloudantCredentials() {\n    const resourceKeys = await getResourceKeys(cloudantInstance.guid).catch(\n      () => history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n    let temp = { ...credentialsAndDefaults };\n    temp.credentials.cloudantApi = credentials.apikey;\n    temp.credentials.cloudantUrl = credentials.url;\n    setCredentialsAndDefaults(temp);\n  }\n\n  async function handleDb2Credentials() {\n    const resourceKeys = await getResourceKeys(db2Instance.guid).catch(() =>\n      history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n    let temp = { ...credentialsAndDefaults };\n    temp.credentials.db2Username =\n      credentials.connection.db2.authentication.username;\n    temp.credentials.db2Password =\n      credentials.connection.db2.authentication.password;\n    temp.credentials.jdbcUrl = credentials.connection.db2.jdbc_url[0].replace(\n      \"user=<userid>;password=<your_password>;\",\n      \"\"\n    );\n    setCredentialsAndDefaults(temp);\n  }\n\n  async function handleSubmit() {\n    setCognosSession(null);\n    setCognosDashboard(null);\n    setUnsavedChanges(false);\n    const response = await getCognosSession(\n      credentialsAndDefaults.credentials.cognosUsername,\n      credentialsAndDefaults.credentials.cognosPassword\n    );\n    if (response.data.Error) {\n      setWarningOpen(true);\n      setCognosSession(null);\n    } else {\n      setCognosSession(response.data);\n    }\n  }\n\n  return !accountLoading ? (\n    <Modal\n      id=\"cognosModal\"\n      hasForm\n      open={cognosConfigOpen}\n      modalHeading={textLanguage[language].cognosModal.heading}\n      modalLabel={textLanguage[language].cognosModal.label}\n      primaryButtonText={textLanguage[language].cognosModal.primaryText}\n      secondaryButtonText={textLanguage[language].cognosModal.secondaryText}\n      onRequestClose={() => {\n        setCognosConfigOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Tabs type=\"container\">\n        <Tab id={\"cognos\"} label={textLanguage[language].cognosModal.tab1}>\n          <Select index={1} setSelection={setCognosInstance} field=\"cognos\" />\n        </Tab>\n        <Tab id={\"cloudant\"} label={textLanguage[language].cognosModal.tab2}>\n          <Select\n            index={2}\n            setSelection={setCloudantInstance}\n            field=\"cloudant\"\n          />\n          <TextInput index={3} field=\"cloudantDbName\" upperCase={false} />\n        </Tab>\n        <Tab id={\"db2\"} label={textLanguage[language].cognosModal.tab3}>\n          <Select index={2} setSelection={setDb2Instance} field=\"db2\" />\n\n          <TextInput index={5} field=\"xsd\" upperCase={false} />\n          <TextInput index={6} field=\"driverClassName\" upperCase={false} />\n        </Tab>\n        <Tab id=\"db2tables\" label={textLanguage[language].cognosModal.tab4}>\n          <TextInput index={7} field=\"logsTable\" upperCase={true} />\n          <TextInput index={8} field=\"conversationTable\" upperCase={true} />\n          <TextInput index={9} field=\"callsTable\" upperCase={true} />\n          <TextInput index={10} field=\"contextTable\" upperCase={true} />\n          <TextInput\n            index={11}\n            field=\"conversationPathTable\"\n            upperCase={true}\n          />\n          <TextInput index={12} field=\"overviewTable\" upperCase={true} />\n          <TextInput\n            index={13}\n            field=\"classDistributionTable\"\n            upperCase={true}\n          />\n          <TextInput index={14} field=\"precisionAtKTable\" upperCase={true} />\n          <TextInput index={15} field=\"classAccuracyTable\" upperCase={true} />\n          <TextInput\n            index={16}\n            field=\"pairWiseClassErrorsTable\"\n            upperCase={true}\n          />\n          <TextInput\n            index={17}\n            field=\"accuracyVsCoverageTable\"\n            upperCase={true}\n          />\n        </Tab>\n      </Tabs>\n    </Modal>\n  ) : (\n    <Loading />\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { sendToCloudant } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function SaveModal() {\n  const {\n    language,\n    credentialsAndDefaults,\n    setCredentialsAndDefaults,\n    cognosDashboard,\n    setUnsavedChanges,\n    setWarningOpen,\n    saveModalOpen,\n    setSaveModalOpen,\n  } = useGlobalState();\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    const response = await sendToCloudant(\n      credentialsAndDefaults.credentials.cloudantApi,\n      credentialsAndDefaults.credentials.cloudantUrl,\n      credentialsAndDefaults.defaults.cloudantDbName,\n      credentialsAndDefaults.defaults.defaultDashboardName,\n      cognosDashboard,\n      setWarningOpen\n    );\n    if (!response.Error) {\n      setUnsavedChanges(false);\n    }\n    setSaveModalOpen(false);\n  }\n\n  return (\n    <Modal\n      open={saveModalOpen}\n      modalHeading={textLanguage[language].saveModal.heading}\n      modalLabel={textLanguage[language].saveModal.label}\n      primaryButtonText={textLanguage[language].saveModal.primaryText}\n      secondaryButtonText={textLanguage[language].saveModal.secondaryText}\n      onRequestClose={() => {\n        setWarningOpen(false);\n        setSaveModalOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-9\"\n        labelText={textLanguage[language].saveModal.inputLabel1}\n        placeholder={credentialsAndDefaults.defaults.defaultDashboardName}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          let temp = { ...credentialsAndDefaults };\n          temp.defaults.defaultDashboardName = e.target.value;\n          setCredentialsAndDefaults(temp);\n        }}\n      />\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { getFromCloudant } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function LoadModal() {\n  const {\n    language,\n    credentialsAndDefaults,\n    setCredentialsAndDefaults,\n    setWarningOpen,\n    loadModalOpen,\n    setUnsavedChanges,\n    setLoadModalOpen,\n    cognosClient,\n    setCognosDashboard,\n  } = useGlobalState();\n\n  async function loadDashboard(cognosApi, dashboard) {\n    return new Promise((resolve, reject) => {\n      try {\n        cognosApi.initialize().then(() => {\n          cognosApi.dashboard\n            .openDashboard({\n              dashboardSpec: dashboard,\n            })\n            .then(async (dashboardAPI) => {\n              dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n              setCognosDashboard(await dashboardAPI.getSpec());\n              dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n                setUnsavedChanges(true);\n                const dashSpec = await dashboardAPI.getSpec();\n                setCognosDashboard(dashSpec);\n              });\n              resolve(\"Ok\");\n            });\n        });\n      } catch (err) {\n        reject(\"Bad Credentials/DbName  \");\n      }\n    });\n  }\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    const dashboardSpec = await getFromCloudant(\n      credentialsAndDefaults.defaults.defaultDashboardName,\n      credentialsAndDefaults.credentials.cloudantApi,\n      credentialsAndDefaults.credentials.cloudantUrl,\n      credentialsAndDefaults.defaults.cloudantDbName,\n      setWarningOpen\n    );\n    if (dashboardSpec.Error) {\n      setLoadModalOpen(false);\n    } else {\n      await loadDashboard(cognosClient, dashboardSpec);\n      setUnsavedChanges(false);\n      setLoadModalOpen(false);\n    }\n  }\n\n  return (\n    <Modal\n      open={loadModalOpen}\n      modalHeading={textLanguage[language].loadModal.heading}\n      modalLabel={textLanguage[language].loadModal.label}\n      primaryButtonText={textLanguage[language].loadModal.primaryText}\n      secondaryButtonText={textLanguage[language].loadModal.secondaryText}\n      onRequestClose={() => {\n        setWarningOpen(false);\n        setLoadModalOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-9\"\n        labelText={textLanguage[language].loadModal.inputLabel1}\n        placeholder={credentialsAndDefaults.defaults.defaultDashboardName}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          let temp = { ...credentialsAndDefaults };\n          temp.defaults.defaultDashboardName = e.target.value;\n          setCredentialsAndDefaults(temp);\n        }}\n      />\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport Header from \"../../components/Header\";\n\nimport CognosApi from \"../../helpers/cognos\";\nimport {\n  getCognosSession,\n  getFromCloudant,\n  initializeSources,\n} from \"../../helpers/helpers\";\n\nimport \"./style.css\";\n\nimport CognosConfigModal from \"../../components/CognosConfigModal\";\nimport SaveModal from \"../../components/SaveModal\";\nimport LoadModal from \"../../components/LoadModal\";\n\nexport default function CognosPage() {\n  const {\n    account,\n    history,\n    language,\n    setLanguage,\n    setCognosConfigOpen,\n    setCognosHelpOpen,\n    cognosSession,\n    setCognosSession,\n    credentialsAndDefaults,\n    cognosDashboard,\n    setCognosDashboard,\n    setSuccessOpen,\n    setUnsavedChanges,\n    setStandardDashboardModal,\n  } = useGlobalState();\n\n  const [renderSave, setRenderSave] = useState(false);\n\n  useEffect(async () => {\n    if (account.entity.name === \"\") {\n      history.push(\"/login\");\n    } else {\n      setCognosSession(null);\n      const storedLanguage = localStorage.getItem(\"language\");\n      if (storedLanguage) setLanguage(storedLanguage);\n\n      setSuccessOpen(false);\n      setStandardDashboardModal(false);\n\n      if (\n        credentialsAndDefaults.credentials.cognosUsername &&\n        credentialsAndDefaults.credentials.cognosUsername !== \"null\" &&\n        credentialsAndDefaults.credentials.cognosPassword &&\n        credentialsAndDefaults.credentials.cognosPassword !== \"null\"\n      ) {\n        const session = await getCognosSession(\n          credentialsAndDefaults.credentials.cognosUsername,\n          credentialsAndDefaults.credentials.cognosPassword\n        );\n        if (session.data.Error) {\n          setCognosSession(null);\n        } else {\n          setCognosSession(session.data);\n        }\n      } else {\n        setCognosConfigOpen(true);\n      }\n    }\n  }, []);\n\n  async function loadDashboard(cognosApi, dashboard, setUnsavedChanges) {\n    return new Promise((resolve, reject) => {\n      cognosApi.initialize().then(() => {\n        cognosApi.dashboard\n          .openDashboard({\n            dashboardSpec: dashboard,\n          })\n          .then(async (dashboardAPI) => {\n            dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n            setCognosDashboard(await dashboardAPI.getSpec());\n\n            dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n              const dashSpec = await dashboardAPI.getSpec();\n              setUnsavedChanges(true);\n              setCognosDashboard(dashSpec);\n            });\n\n            setRenderSave(true);\n            resolve(\"Ok\");\n          });\n      });\n    });\n  }\n\n  async function initializeDashboard(cognosApi) {\n    cognosApi.initialize().then(async () => {\n      cognosApi.dashboard\n        .openDashboard({\n          dashboardSpec: await initializeSources(\n            credentialsAndDefaults.defaults.xsd,\n            credentialsAndDefaults.credentials.jdbcUrl,\n            credentialsAndDefaults.defaults.driverClassName,\n            credentialsAndDefaults.defaults.schema,\n            credentialsAndDefaults.credentials.db2Username,\n            credentialsAndDefaults.credentials.db2Password,\n            credentialsAndDefaults.defaults.logsTable,\n            credentialsAndDefaults.defaults.conversationTable,\n            credentialsAndDefaults.defaults.callsTable,\n            credentialsAndDefaults.defaults.contextTable,\n            credentialsAndDefaults.defaults.conversationPathTable,\n            credentialsAndDefaults.defaults.overviewTable,\n            credentialsAndDefaults.defaults.classDistributionTable,\n            credentialsAndDefaults.defaults.precisionAtKTable,\n            credentialsAndDefaults.defaults.classAccuracyTable,\n            credentialsAndDefaults.defaults.pairWiseClassErrorsTable,\n            credentialsAndDefaults.defaults.accuracyVsCoverageTable\n          ),\n        })\n        .then(async (dashboardAPI) => {\n          dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n          setCognosDashboard(await dashboardAPI.getSpec());\n\n          dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n            const dashSpec = await dashboardAPI.getSpec();\n            setUnsavedChanges(true);\n            setCognosDashboard(dashSpec);\n          });\n\n          setRenderSave(true);\n        });\n    });\n  }\n\n  useEffect(async () => {\n    if (cognosSession && typeof cognosSession === \"string\") {\n      const cognosApi = new CognosApi({\n        cognosRootURL:\n          \"https://us-south.dynamic-dashboard-embedded.cloud.ibm.com/daas/\",\n        node: document.getElementById(\"cognosDiv\"),\n        sessionCode: cognosSession,\n        language: language,\n      });\n\n      if (cognosDashboard) {\n        await loadDashboard(cognosApi, cognosDashboard, setUnsavedChanges);\n      } else {\n        const storagedDashboard = await getFromCloudant(\n          credentialsAndDefaults.defaults.defaultDashboardName,\n          credentialsAndDefaults.credentials.cloudantApi,\n          credentialsAndDefaults.credentials.cloudantUrl,\n          credentialsAndDefaults.defaults.cloudantDbName,\n          setStandardDashboardModal\n        );\n        setCognosConfigOpen(false);\n        if (!storagedDashboard.Error) {\n          await loadDashboard(cognosApi, storagedDashboard, setUnsavedChanges);\n        } else {\n          await initializeDashboard(cognosApi);\n        }\n      }\n    } else if (!cognosSession) {\n      setRenderSave(false);\n    }\n  }, [cognosSession]);\n\n  return (\n    <>\n      <Header\n        modalOpen={setCognosConfigOpen}\n        helpOpen={setCognosHelpOpen}\n        renderButton={renderSave}\n      />\n      <div id=\"content\">\n        <SaveModal />\n        <LoadModal />\n        <CognosConfigModal />\n        {cognosSession && <div id=\"cognosDiv\"></div>}\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport Header from \"../../components/Header\";\n\nimport CognosApi from \"../../helpers/cognos\";\nimport { getCognosSession, initializeExperiments } from \"../../helpers/helpers\";\n\nimport CognosConfigModal from \"../../components/CognosConfigModal\";\nimport SaveModal from \"../../components/SaveModal\";\nimport LoadModal from \"../../components/LoadModal\";\n\nimport \"./style.css\";\n\nexport default function CognosPage() {\n  const {\n    account,\n    history,\n    language,\n    setLanguage,\n    setCognosConfigOpen,\n    setCognosHelpOpen,\n    cognosSession,\n    setCognosSession,\n    credentialsAndDefaults,\n    setSuccessOpen,\n    setUnsavedChanges,\n    setStandardDashboardModal,\n  } = useGlobalState();\n\n  const [renderSave, setRenderSave] = useState(false);\n\n  useEffect(async () => {\n    if (account.entity.name === \"\") {\n      history.push(\"/login\");\n    } else {\n      setCognosSession(null);\n      const storedLanguage = localStorage.getItem(\"language\");\n      if (storedLanguage) setLanguage(storedLanguage);\n\n      setSuccessOpen(false);\n      setStandardDashboardModal(false);\n\n      if (\n        credentialsAndDefaults.credentials.cognosUsername &&\n        credentialsAndDefaults.credentials.cognosUsername !== \"null\" &&\n        credentialsAndDefaults.credentials.cognosPassword &&\n        credentialsAndDefaults.credentials.cognosPassword !== \"null\"\n      ) {\n        const session = await getCognosSession(\n          credentialsAndDefaults.credentials.cognosUsername,\n          credentialsAndDefaults.credentials.cognosPassword\n        );\n        if (session.data.Error) {\n          setCognosSession(null);\n        } else {\n          setCognosSession(session.data);\n        }\n      } else {\n        setCognosConfigOpen(true);\n      }\n    }\n  }, []);\n\n  async function initializeDashboard(cognosApi) {\n    cognosApi.initialize().then(async () => {\n      cognosApi.dashboard\n        .openDashboard({\n          dashboardSpec: await initializeExperiments(\n            credentialsAndDefaults.defaults.xsd,\n            credentialsAndDefaults.credentials.jdbcUrl,\n            credentialsAndDefaults.defaults.driverClassName,\n            credentialsAndDefaults.defaults.schema,\n            credentialsAndDefaults.credentials.db2Username,\n            credentialsAndDefaults.credentials.db2Password,\n            credentialsAndDefaults.defaults.overviewTable,\n            credentialsAndDefaults.defaults.classDistributionTable,\n            credentialsAndDefaults.defaults.precisionAtKTable,\n            credentialsAndDefaults.defaults.classAccuracyTable,\n            credentialsAndDefaults.defaults.pairWiseClassErrorsTable,\n            credentialsAndDefaults.defaults.accuracyVsCoverageTable\n          ),\n        })\n        .then(async (dashboardAPI) => {\n          dashboardAPI.setMode(dashboardAPI.MODES.VIEW);\n\n          dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n            const dashSpec = await dashboardAPI.getSpec();\n            setUnsavedChanges(true);\n          });\n        });\n    });\n  }\n\n  useEffect(async () => {\n    if (cognosSession && typeof cognosSession === \"string\") {\n      const cognosApi = new CognosApi({\n        cognosRootURL:\n          \"https://us-south.dynamic-dashboard-embedded.cloud.ibm.com/daas/\",\n        node: document.getElementById(\"cognosDiv\"),\n        sessionCode: cognosSession,\n        language: language,\n      });\n      setCognosConfigOpen(false);\n      await initializeDashboard(cognosApi);\n    }\n  }, [cognosSession]);\n\n  return (\n    <>\n      <Header\n        modalOpen={setCognosConfigOpen}\n        helpOpen={setCognosHelpOpen}\n        renderButton={renderSave}\n      />\n      <div id=\"content\">\n        <SaveModal />\n        <LoadModal />\n        <CognosConfigModal />\n        {cognosSession && <div id=\"cognosDiv\"></div>}\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { TextInput, Button, Loading } from \"carbon-components-react\";\nimport {\n  getAccounts,\n  getResources,\n  switchAccount,\n} from \"../../helpers/apiCalls\";\n\nimport api from \"../../services/api\";\n\nimport { registerLogin, defaultValues } from \"../../helpers/helpers\";\n\nimport \"./style.css\";\n\nexport default function Login() {\n  const {\n    setHelpOpen,\n    setAccountModalOpen,\n    history,\n    setAccount,\n    setAccounts,\n    setResources,\n    credentialsAndDefaults,\n    setCredentialsAndDefaults,\n  } = useGlobalState();\n  const [token, setToken] = useState(\"\");\n  const [invalid, setInvalid] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await api.post(\"/ibmid/login\", { passcode: token });\n      let res = await getAccounts();\n      setAccounts(res);\n      if (\n        localStorage.getItem(\"savedAccount\") &&\n        res.resources.some(\n          (account) =>\n            JSON.stringify(account) === localStorage.getItem(\"savedAccount\")\n        )\n      ) {\n        console.log(\"Found account. Picking last one used\");\n        await switchAccount(\n          JSON.parse(localStorage.getItem(\"savedAccount\")).metadata.guid\n        ).then(() => {\n          setAccount(JSON.parse(localStorage.getItem(\"savedAccount\")));\n        });\n      } else {\n        console.log(\"No saved account. Picking default first\");\n        setAccount(res.resources[0]);\n        localStorage.removeItem(\"savedAccount\");\n      }\n      setResources(await getResources());\n      history.push(\"/home\");\n\n      registerLogin(\n        `${\n          res.resources[0].entity.primary_owner.ibmid\n        } - ${new Date().toLocaleDateString(\"pt-BR\", {\n          timeZone: \"America/Sao_Paulo\",\n          hour: \"numeric\",\n          minute: \"numeric\",\n          second: \"numeric\",\n        })}`,\n        res.resources[0]\n      );\n    } catch (error) {\n      setInvalid(true);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    let temp = { ...credentialsAndDefaults };\n    if (credentialsAndDefaults === null) {\n      temp = defaultValues;\n    } else {\n      Object.entries(credentialsAndDefaults.defaults).map(([key, value]) => {\n        if (value === null) {\n          temp.defaults[key] = defaultValues.defaults[key];\n        }\n      });\n    }\n    setCredentialsAndDefaults(temp);\n  }, []);\n\n  return (\n    <div id=\"login_page\">\n      <Header modalOpen={setAccountModalOpen} helpOpen={setHelpOpen} />\n      <div id=\"login_content\">\n        <div id=\"login_image\">\n          <div id=\"image\" />\n        </div>\n\n        <div id=\"login\">\n          <h2>Login</h2>\n          <br></br>\n          <TextInput\n            size=\"md\"\n            type=\"password\"\n            labelText=\"Token\"\n            placeholder=\"IBM Cloud one time Token\"\n            required\n            invalid={invalid}\n            invalidText=\"Please, try againg.\"\n            value={token}\n            onChange={(event) => {\n              setToken(event.target.value);\n              setInvalid(false);\n            }}\n          />\n          <div id=\"buttons\">\n            <Button\n              className={\"button\"}\n              href={`${window.location.protocol}//${window.location.host}/ibmid/passcode`}\n              target=\"_blank\"\n              kind=\"secondary\"\n            >\n              Get Token\n            </Button>\n            <Button onClick={handleLogin} className={\"button\"}>\n              Login\n            </Button>\n          </div>\n        </div>\n        {loading && <Loading />}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home/index\";\nimport Dashboard from \"./pages/Dashboard/index\";\nimport SearchPage from \"./pages/Search/index\";\nimport CognosPage from \"./pages/Cognos/index\";\nimport TrainPage from \"./pages/Train/index\";\nimport Login from \"./pages/Login/index\";\nimport GlobalStateProvider from \"./hooks/globalState\";\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <GlobalStateProvider>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/train\" component={TrainPage} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/search\" component={SearchPage} />\n          <Route exact path=\"/cognos\" component={CognosPage} />\n        </Switch>\n      </GlobalStateProvider>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport Routes from './routes';\nimport GlobalStateProvider from './hooks/globalState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <Routes />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}